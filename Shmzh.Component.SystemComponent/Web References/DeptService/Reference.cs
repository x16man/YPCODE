//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.225
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.225 版自动生成。
// 
#pragma warning disable 1591

namespace Shmzh.Components.SystemComponent.DeptService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DeptSoap", Namespace="http://tempuri.org/")]
    public partial class Dept : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistDeptCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistDeptNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasChildDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllByCompanyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAvalibleCompanyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByCompanyAndManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByCompanyCodeAndDeptCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParentDeptByCodeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Dept() {
            this.Url = global::Shmzh.Components.SystemComponent.Properties.Settings.Default.Shmzh_Components_SystemComponent_DeptService_Dept;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertCompletedEventHandler InsertCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event DisableCompletedEventHandler DisableCompleted;
        
        /// <remarks/>
        public event EnableCompletedEventHandler EnableCompleted;
        
        /// <remarks/>
        public event IsExistDeptCodeCompletedEventHandler IsExistDeptCodeCompleted;
        
        /// <remarks/>
        public event IsExistDeptNameCompletedEventHandler IsExistDeptNameCompleted;
        
        /// <remarks/>
        public event HasChildDeptCompletedEventHandler HasChildDeptCompleted;
        
        /// <remarks/>
        public event HasUserCompletedEventHandler HasUserCompleted;
        
        /// <remarks/>
        public event GetAllByCompanyCodeCompletedEventHandler GetAllByCompanyCodeCompleted;
        
        /// <remarks/>
        public event GetAllAvalibleCompanyCodeCompletedEventHandler GetAllAvalibleCompanyCodeCompleted;
        
        /// <remarks/>
        public event GetByCompanyAndManagerCompletedEventHandler GetByCompanyAndManagerCompleted;
        
        /// <remarks/>
        public event GetByCompanyCodeAndDeptCodeCompletedEventHandler GetByCompanyCodeAndDeptCodeCompleted;
        
        /// <remarks/>
        public event GetParentDeptByCodeCompletedEventHandler GetParentDeptByCodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insert(DeptInfo deptInfo) {
            object[] results = this.Invoke("Insert", new object[] {
                        deptInfo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAsync(DeptInfo deptInfo) {
            this.InsertAsync(deptInfo, null);
        }
        
        /// <remarks/>
        public void InsertAsync(DeptInfo deptInfo, object userState) {
            if ((this.InsertOperationCompleted == null)) {
                this.InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOperationCompleted);
            }
            this.InvokeAsync("Insert", new object[] {
                        deptInfo}, this.InsertOperationCompleted, userState);
        }
        
        private void OnInsertOperationCompleted(object arg) {
            if ((this.InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCompleted(this, new InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Update(DeptInfo deptInfo) {
            object[] results = this.Invoke("Update", new object[] {
                        deptInfo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(DeptInfo deptInfo) {
            this.UpdateAsync(deptInfo, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(DeptInfo deptInfo, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        deptInfo}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete(string companyCode, string deptCode) {
            object[] results = this.Invoke("Delete", new object[] {
                        companyCode,
                        deptCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string companyCode, string deptCode) {
            this.DeleteAsync(companyCode, deptCode, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string companyCode, string deptCode, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        companyCode,
                        deptCode}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Disable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Disable(string companyCode, string deptCode) {
            object[] results = this.Invoke("Disable", new object[] {
                        companyCode,
                        deptCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DisableAsync(string companyCode, string deptCode) {
            this.DisableAsync(companyCode, deptCode, null);
        }
        
        /// <remarks/>
        public void DisableAsync(string companyCode, string deptCode, object userState) {
            if ((this.DisableOperationCompleted == null)) {
                this.DisableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableOperationCompleted);
            }
            this.InvokeAsync("Disable", new object[] {
                        companyCode,
                        deptCode}, this.DisableOperationCompleted, userState);
        }
        
        private void OnDisableOperationCompleted(object arg) {
            if ((this.DisableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableCompleted(this, new DisableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Enable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Enable(string companyCode, string deptCode) {
            object[] results = this.Invoke("Enable", new object[] {
                        companyCode,
                        deptCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EnableAsync(string companyCode, string deptCode) {
            this.EnableAsync(companyCode, deptCode, null);
        }
        
        /// <remarks/>
        public void EnableAsync(string companyCode, string deptCode, object userState) {
            if ((this.EnableOperationCompleted == null)) {
                this.EnableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableOperationCompleted);
            }
            this.InvokeAsync("Enable", new object[] {
                        companyCode,
                        deptCode}, this.EnableOperationCompleted, userState);
        }
        
        private void OnEnableOperationCompleted(object arg) {
            if ((this.EnableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableCompleted(this, new EnableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistDeptCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistDeptCode(string companyCode, string deptCode) {
            object[] results = this.Invoke("IsExistDeptCode", new object[] {
                        companyCode,
                        deptCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistDeptCodeAsync(string companyCode, string deptCode) {
            this.IsExistDeptCodeAsync(companyCode, deptCode, null);
        }
        
        /// <remarks/>
        public void IsExistDeptCodeAsync(string companyCode, string deptCode, object userState) {
            if ((this.IsExistDeptCodeOperationCompleted == null)) {
                this.IsExistDeptCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistDeptCodeOperationCompleted);
            }
            this.InvokeAsync("IsExistDeptCode", new object[] {
                        companyCode,
                        deptCode}, this.IsExistDeptCodeOperationCompleted, userState);
        }
        
        private void OnIsExistDeptCodeOperationCompleted(object arg) {
            if ((this.IsExistDeptCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistDeptCodeCompleted(this, new IsExistDeptCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExistDeptName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistDeptName(string companyCode, string deptName) {
            object[] results = this.Invoke("IsExistDeptName", new object[] {
                        companyCode,
                        deptName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistDeptNameAsync(string companyCode, string deptName) {
            this.IsExistDeptNameAsync(companyCode, deptName, null);
        }
        
        /// <remarks/>
        public void IsExistDeptNameAsync(string companyCode, string deptName, object userState) {
            if ((this.IsExistDeptNameOperationCompleted == null)) {
                this.IsExistDeptNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistDeptNameOperationCompleted);
            }
            this.InvokeAsync("IsExistDeptName", new object[] {
                        companyCode,
                        deptName}, this.IsExistDeptNameOperationCompleted, userState);
        }
        
        private void OnIsExistDeptNameOperationCompleted(object arg) {
            if ((this.IsExistDeptNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistDeptNameCompleted(this, new IsExistDeptNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HasChildDept", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasChildDept(string companyCode, string deptCode) {
            object[] results = this.Invoke("HasChildDept", new object[] {
                        companyCode,
                        deptCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasChildDeptAsync(string companyCode, string deptCode) {
            this.HasChildDeptAsync(companyCode, deptCode, null);
        }
        
        /// <remarks/>
        public void HasChildDeptAsync(string companyCode, string deptCode, object userState) {
            if ((this.HasChildDeptOperationCompleted == null)) {
                this.HasChildDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasChildDeptOperationCompleted);
            }
            this.InvokeAsync("HasChildDept", new object[] {
                        companyCode,
                        deptCode}, this.HasChildDeptOperationCompleted, userState);
        }
        
        private void OnHasChildDeptOperationCompleted(object arg) {
            if ((this.HasChildDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasChildDeptCompleted(this, new HasChildDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HasUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasUser(string companyCode, string deptCode) {
            object[] results = this.Invoke("HasUser", new object[] {
                        companyCode,
                        deptCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasUserAsync(string companyCode, string deptCode) {
            this.HasUserAsync(companyCode, deptCode, null);
        }
        
        /// <remarks/>
        public void HasUserAsync(string companyCode, string deptCode, object userState) {
            if ((this.HasUserOperationCompleted == null)) {
                this.HasUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasUserOperationCompleted);
            }
            this.InvokeAsync("HasUser", new object[] {
                        companyCode,
                        deptCode}, this.HasUserOperationCompleted, userState);
        }
        
        private void OnHasUserOperationCompleted(object arg) {
            if ((this.HasUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasUserCompleted(this, new HasUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllByCompanyCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeptInfo[] GetAllByCompanyCode(string companyCode) {
            object[] results = this.Invoke("GetAllByCompanyCode", new object[] {
                        companyCode});
            return ((DeptInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllByCompanyCodeAsync(string companyCode) {
            this.GetAllByCompanyCodeAsync(companyCode, null);
        }
        
        /// <remarks/>
        public void GetAllByCompanyCodeAsync(string companyCode, object userState) {
            if ((this.GetAllByCompanyCodeOperationCompleted == null)) {
                this.GetAllByCompanyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllByCompanyCodeOperationCompleted);
            }
            this.InvokeAsync("GetAllByCompanyCode", new object[] {
                        companyCode}, this.GetAllByCompanyCodeOperationCompleted, userState);
        }
        
        private void OnGetAllByCompanyCodeOperationCompleted(object arg) {
            if ((this.GetAllByCompanyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllByCompanyCodeCompleted(this, new GetAllByCompanyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllAvalibleCompanyCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeptInfo[] GetAllAvalibleCompanyCode(string companyCode) {
            object[] results = this.Invoke("GetAllAvalibleCompanyCode", new object[] {
                        companyCode});
            return ((DeptInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAvalibleCompanyCodeAsync(string companyCode) {
            this.GetAllAvalibleCompanyCodeAsync(companyCode, null);
        }
        
        /// <remarks/>
        public void GetAllAvalibleCompanyCodeAsync(string companyCode, object userState) {
            if ((this.GetAllAvalibleCompanyCodeOperationCompleted == null)) {
                this.GetAllAvalibleCompanyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAvalibleCompanyCodeOperationCompleted);
            }
            this.InvokeAsync("GetAllAvalibleCompanyCode", new object[] {
                        companyCode}, this.GetAllAvalibleCompanyCodeOperationCompleted, userState);
        }
        
        private void OnGetAllAvalibleCompanyCodeOperationCompleted(object arg) {
            if ((this.GetAllAvalibleCompanyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAvalibleCompanyCodeCompleted(this, new GetAllAvalibleCompanyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByCompanyAndManager", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeptInfo[] GetByCompanyAndManager(string companyCode, string manager) {
            object[] results = this.Invoke("GetByCompanyAndManager", new object[] {
                        companyCode,
                        manager});
            return ((DeptInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetByCompanyAndManagerAsync(string companyCode, string manager) {
            this.GetByCompanyAndManagerAsync(companyCode, manager, null);
        }
        
        /// <remarks/>
        public void GetByCompanyAndManagerAsync(string companyCode, string manager, object userState) {
            if ((this.GetByCompanyAndManagerOperationCompleted == null)) {
                this.GetByCompanyAndManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByCompanyAndManagerOperationCompleted);
            }
            this.InvokeAsync("GetByCompanyAndManager", new object[] {
                        companyCode,
                        manager}, this.GetByCompanyAndManagerOperationCompleted, userState);
        }
        
        private void OnGetByCompanyAndManagerOperationCompleted(object arg) {
            if ((this.GetByCompanyAndManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByCompanyAndManagerCompleted(this, new GetByCompanyAndManagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByCompanyCodeAndDeptCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeptInfo GetByCompanyCodeAndDeptCode(string companyCode, string deptCode) {
            object[] results = this.Invoke("GetByCompanyCodeAndDeptCode", new object[] {
                        companyCode,
                        deptCode});
            return ((DeptInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetByCompanyCodeAndDeptCodeAsync(string companyCode, string deptCode) {
            this.GetByCompanyCodeAndDeptCodeAsync(companyCode, deptCode, null);
        }
        
        /// <remarks/>
        public void GetByCompanyCodeAndDeptCodeAsync(string companyCode, string deptCode, object userState) {
            if ((this.GetByCompanyCodeAndDeptCodeOperationCompleted == null)) {
                this.GetByCompanyCodeAndDeptCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByCompanyCodeAndDeptCodeOperationCompleted);
            }
            this.InvokeAsync("GetByCompanyCodeAndDeptCode", new object[] {
                        companyCode,
                        deptCode}, this.GetByCompanyCodeAndDeptCodeOperationCompleted, userState);
        }
        
        private void OnGetByCompanyCodeAndDeptCodeOperationCompleted(object arg) {
            if ((this.GetByCompanyCodeAndDeptCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByCompanyCodeAndDeptCodeCompleted(this, new GetByCompanyCodeAndDeptCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParentDeptByCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeptInfo GetParentDeptByCode(string deptCode) {
            object[] results = this.Invoke("GetParentDeptByCode", new object[] {
                        deptCode});
            return ((DeptInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetParentDeptByCodeAsync(string deptCode) {
            this.GetParentDeptByCodeAsync(deptCode, null);
        }
        
        /// <remarks/>
        public void GetParentDeptByCodeAsync(string deptCode, object userState) {
            if ((this.GetParentDeptByCodeOperationCompleted == null)) {
                this.GetParentDeptByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParentDeptByCodeOperationCompleted);
            }
            this.InvokeAsync("GetParentDeptByCode", new object[] {
                        deptCode}, this.GetParentDeptByCodeOperationCompleted, userState);
        }
        
        private void OnGetParentDeptByCodeOperationCompleted(object arg) {
            if ((this.GetParentDeptByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParentDeptByCodeCompleted(this, new GetParentDeptByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DeptInfo {
        
        private string deptCodeField;
        
        private string deptCoField;
        
        private string deptCnNameField;
        
        private string deptEnNameField;
        
        private string parentDeptField;
        
        private string parentDeptNameField;
        
        private string deptMgrField;
        
        private string deptMgrNameField;
        
        private short deptLevelField;
        
        private short serialField;
        
        private string typeIdField;
        
        private string typeNameField;
        
        private string costCenterField;
        
        private System.DateTime createDateField;
        
        private string isValidField;
        
        private int showInOtherSysField;
        
        private string remarkField;
        
        /// <remarks/>
        public string DeptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptCo {
            get {
                return this.deptCoField;
            }
            set {
                this.deptCoField = value;
            }
        }
        
        /// <remarks/>
        public string DeptCnName {
            get {
                return this.deptCnNameField;
            }
            set {
                this.deptCnNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeptEnName {
            get {
                return this.deptEnNameField;
            }
            set {
                this.deptEnNameField = value;
            }
        }
        
        /// <remarks/>
        public string ParentDept {
            get {
                return this.parentDeptField;
            }
            set {
                this.parentDeptField = value;
            }
        }
        
        /// <remarks/>
        public string ParentDeptName {
            get {
                return this.parentDeptNameField;
            }
            set {
                this.parentDeptNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeptMgr {
            get {
                return this.deptMgrField;
            }
            set {
                this.deptMgrField = value;
            }
        }
        
        /// <remarks/>
        public string DeptMgrName {
            get {
                return this.deptMgrNameField;
            }
            set {
                this.deptMgrNameField = value;
            }
        }
        
        /// <remarks/>
        public short DeptLevel {
            get {
                return this.deptLevelField;
            }
            set {
                this.deptLevelField = value;
            }
        }
        
        /// <remarks/>
        public short Serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
        
        /// <remarks/>
        public string TypeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        public string TypeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
            }
        }
        
        /// <remarks/>
        public string CostCenter {
            get {
                return this.costCenterField;
            }
            set {
                this.costCenterField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string IsValid {
            get {
                return this.isValidField;
            }
            set {
                this.isValidField = value;
            }
        }
        
        /// <remarks/>
        public int ShowInOtherSys {
            get {
                return this.showInOtherSysField;
            }
            set {
                this.showInOtherSysField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertCompletedEventHandler(object sender, InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DisableCompletedEventHandler(object sender, DisableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnableCompletedEventHandler(object sender, EnableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsExistDeptCodeCompletedEventHandler(object sender, IsExistDeptCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistDeptCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistDeptCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsExistDeptNameCompletedEventHandler(object sender, IsExistDeptNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistDeptNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistDeptNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HasChildDeptCompletedEventHandler(object sender, HasChildDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasChildDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasChildDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HasUserCompletedEventHandler(object sender, HasUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllByCompanyCodeCompletedEventHandler(object sender, GetAllByCompanyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllByCompanyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllByCompanyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeptInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeptInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllAvalibleCompanyCodeCompletedEventHandler(object sender, GetAllAvalibleCompanyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAvalibleCompanyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAvalibleCompanyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeptInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeptInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByCompanyAndManagerCompletedEventHandler(object sender, GetByCompanyAndManagerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByCompanyAndManagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByCompanyAndManagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeptInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeptInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByCompanyCodeAndDeptCodeCompletedEventHandler(object sender, GetByCompanyCodeAndDeptCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByCompanyCodeAndDeptCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByCompanyCodeAndDeptCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeptInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeptInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetParentDeptByCodeCompletedEventHandler(object sender, GetParentDeptByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParentDeptByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParentDeptByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeptInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeptInfo)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591