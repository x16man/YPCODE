//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.225
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.225 版自动生成。
// 
#pragma warning disable 1591

namespace Shmzh.Components.SystemComponent.UserRoleService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserRoleSoap", Namespace="http://tempuri.org/")]
    public partial class UserRole : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyToOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete1OperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByProductCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByRoleCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByProductCodeAndNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByProductCodeAndUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByProductCodeAndUserNameAndCheckCodeAndTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByCheckCodeAndTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByCheckCodeAndTypeAndUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNoAccessObjOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UserRole() {
            this.Url = global::Shmzh.Components.SystemComponent.Properties.Settings.Default.Shmzh_Components_SystemComponent_UserRoleService_UserRole;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertCompletedEventHandler InsertCompleted;
        
        /// <remarks/>
        public event Insert1CompletedEventHandler Insert1Completed;
        
        /// <remarks/>
        public event CopyToCompletedEventHandler CopyToCompleted;
        
        /// <remarks/>
        public event Insert2CompletedEventHandler Insert2Completed;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event Delete1CompletedEventHandler Delete1Completed;
        
        /// <remarks/>
        public event Delete2CompletedEventHandler Delete2Completed;
        
        /// <remarks/>
        public event ClearAccessCompletedEventHandler ClearAccessCompleted;
        
        /// <remarks/>
        public event GetByUserNameCompletedEventHandler GetByUserNameCompleted;
        
        /// <remarks/>
        public event GetByProductCodeCompletedEventHandler GetByProductCodeCompleted;
        
        /// <remarks/>
        public event GetByRoleCodeCompletedEventHandler GetByRoleCodeCompleted;
        
        /// <remarks/>
        public event GetByProductCodeAndNameCompletedEventHandler GetByProductCodeAndNameCompleted;
        
        /// <remarks/>
        public event GetByProductCodeAndUserNameCompletedEventHandler GetByProductCodeAndUserNameCompleted;
        
        /// <remarks/>
        public event GetByProductCodeAndUserNameAndCheckCodeAndTypeCompletedEventHandler GetByProductCodeAndUserNameAndCheckCodeAndTypeCompleted;
        
        /// <remarks/>
        public event GetByCheckCodeAndTypeCompletedEventHandler GetByCheckCodeAndTypeCompleted;
        
        /// <remarks/>
        public event GetByCheckCodeAndTypeAndUserNameCompletedEventHandler GetByCheckCodeAndTypeAndUserNameCompleted;
        
        /// <remarks/>
        public event GetNoAccessObjCompletedEventHandler GetNoAccessObjCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insert(UserRoleInfo userRoleInfo) {
            object[] results = this.Invoke("Insert", new object[] {
                        userRoleInfo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAsync(UserRoleInfo userRoleInfo) {
            this.InsertAsync(userRoleInfo, null);
        }
        
        /// <remarks/>
        public void InsertAsync(UserRoleInfo userRoleInfo, object userState) {
            if ((this.InsertOperationCompleted == null)) {
                this.InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOperationCompleted);
            }
            this.InvokeAsync("Insert", new object[] {
                        userRoleInfo}, this.InsertOperationCompleted, userState);
        }
        
        private void OnInsertOperationCompleted(object arg) {
            if ((this.InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCompleted(this, new InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insert1(string userNames, string roleCodes, short productCode) {
            object[] results = this.Invoke("Insert1", new object[] {
                        userNames,
                        roleCodes,
                        productCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Insert1Async(string userNames, string roleCodes, short productCode) {
            this.Insert1Async(userNames, roleCodes, productCode, null);
        }
        
        /// <remarks/>
        public void Insert1Async(string userNames, string roleCodes, short productCode, object userState) {
            if ((this.Insert1OperationCompleted == null)) {
                this.Insert1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert1OperationCompleted);
            }
            this.InvokeAsync("Insert1", new object[] {
                        userNames,
                        roleCodes,
                        productCode}, this.Insert1OperationCompleted, userState);
        }
        
        private void OnInsert1OperationCompleted(object arg) {
            if ((this.Insert1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert1Completed(this, new Insert1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyTo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CopyTo(string sourceUserName, string targetUserName, short productCode) {
            object[] results = this.Invoke("CopyTo", new object[] {
                        sourceUserName,
                        targetUserName,
                        productCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CopyToAsync(string sourceUserName, string targetUserName, short productCode) {
            this.CopyToAsync(sourceUserName, targetUserName, productCode, null);
        }
        
        /// <remarks/>
        public void CopyToAsync(string sourceUserName, string targetUserName, short productCode, object userState) {
            if ((this.CopyToOperationCompleted == null)) {
                this.CopyToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyToOperationCompleted);
            }
            this.InvokeAsync("CopyTo", new object[] {
                        sourceUserName,
                        targetUserName,
                        productCode}, this.CopyToOperationCompleted, userState);
        }
        
        private void OnCopyToOperationCompleted(object arg) {
            if ((this.CopyToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyToCompleted(this, new CopyToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insert2(string userNames, string roleCodes, string checkCode, string type) {
            object[] results = this.Invoke("Insert2", new object[] {
                        userNames,
                        roleCodes,
                        checkCode,
                        type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Insert2Async(string userNames, string roleCodes, string checkCode, string type) {
            this.Insert2Async(userNames, roleCodes, checkCode, type, null);
        }
        
        /// <remarks/>
        public void Insert2Async(string userNames, string roleCodes, string checkCode, string type, object userState) {
            if ((this.Insert2OperationCompleted == null)) {
                this.Insert2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert2OperationCompleted);
            }
            this.InvokeAsync("Insert2", new object[] {
                        userNames,
                        roleCodes,
                        checkCode,
                        type}, this.Insert2OperationCompleted, userState);
        }
        
        private void OnInsert2OperationCompleted(object arg) {
            if ((this.Insert2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert2Completed(this, new Insert2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete(UserRoleInfo userRoleInfo) {
            object[] results = this.Invoke("Delete", new object[] {
                        userRoleInfo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(UserRoleInfo userRoleInfo) {
            this.DeleteAsync(userRoleInfo, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(UserRoleInfo userRoleInfo, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        userRoleInfo}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete1(string userNames, short productCode) {
            object[] results = this.Invoke("Delete1", new object[] {
                        userNames,
                        productCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Delete1Async(string userNames, short productCode) {
            this.Delete1Async(userNames, productCode, null);
        }
        
        /// <remarks/>
        public void Delete1Async(string userNames, short productCode, object userState) {
            if ((this.Delete1OperationCompleted == null)) {
                this.Delete1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete1OperationCompleted);
            }
            this.InvokeAsync("Delete1", new object[] {
                        userNames,
                        productCode}, this.Delete1OperationCompleted, userState);
        }
        
        private void OnDelete1OperationCompleted(object arg) {
            if ((this.Delete1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete1Completed(this, new Delete1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete2(string userNames, string checkCode, string type) {
            object[] results = this.Invoke("Delete2", new object[] {
                        userNames,
                        checkCode,
                        type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Delete2Async(string userNames, string checkCode, string type) {
            this.Delete2Async(userNames, checkCode, type, null);
        }
        
        /// <remarks/>
        public void Delete2Async(string userNames, string checkCode, string type, object userState) {
            if ((this.Delete2OperationCompleted == null)) {
                this.Delete2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete2OperationCompleted);
            }
            this.InvokeAsync("Delete2", new object[] {
                        userNames,
                        checkCode,
                        type}, this.Delete2OperationCompleted, userState);
        }
        
        private void OnDelete2OperationCompleted(object arg) {
            if ((this.Delete2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete2Completed(this, new Delete2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClearAccess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ClearAccess(string checkCode, string type) {
            object[] results = this.Invoke("ClearAccess", new object[] {
                        checkCode,
                        type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ClearAccessAsync(string checkCode, string type) {
            this.ClearAccessAsync(checkCode, type, null);
        }
        
        /// <remarks/>
        public void ClearAccessAsync(string checkCode, string type, object userState) {
            if ((this.ClearAccessOperationCompleted == null)) {
                this.ClearAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearAccessOperationCompleted);
            }
            this.InvokeAsync("ClearAccess", new object[] {
                        checkCode,
                        type}, this.ClearAccessOperationCompleted, userState);
        }
        
        private void OnClearAccessOperationCompleted(object arg) {
            if ((this.ClearAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearAccessCompleted(this, new ClearAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByUserName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserRoleInfo[] GetByUserName(string userName) {
            object[] results = this.Invoke("GetByUserName", new object[] {
                        userName});
            return ((UserRoleInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetByUserNameAsync(string userName) {
            this.GetByUserNameAsync(userName, null);
        }
        
        /// <remarks/>
        public void GetByUserNameAsync(string userName, object userState) {
            if ((this.GetByUserNameOperationCompleted == null)) {
                this.GetByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByUserNameOperationCompleted);
            }
            this.InvokeAsync("GetByUserName", new object[] {
                        userName}, this.GetByUserNameOperationCompleted, userState);
        }
        
        private void OnGetByUserNameOperationCompleted(object arg) {
            if ((this.GetByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByUserNameCompleted(this, new GetByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByProductCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserRoleInfo[] GetByProductCode(short productCode) {
            object[] results = this.Invoke("GetByProductCode", new object[] {
                        productCode});
            return ((UserRoleInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetByProductCodeAsync(short productCode) {
            this.GetByProductCodeAsync(productCode, null);
        }
        
        /// <remarks/>
        public void GetByProductCodeAsync(short productCode, object userState) {
            if ((this.GetByProductCodeOperationCompleted == null)) {
                this.GetByProductCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByProductCodeOperationCompleted);
            }
            this.InvokeAsync("GetByProductCode", new object[] {
                        productCode}, this.GetByProductCodeOperationCompleted, userState);
        }
        
        private void OnGetByProductCodeOperationCompleted(object arg) {
            if ((this.GetByProductCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByProductCodeCompleted(this, new GetByProductCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByRoleCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserRoleInfo[] GetByRoleCode(short roleCode) {
            object[] results = this.Invoke("GetByRoleCode", new object[] {
                        roleCode});
            return ((UserRoleInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetByRoleCodeAsync(short roleCode) {
            this.GetByRoleCodeAsync(roleCode, null);
        }
        
        /// <remarks/>
        public void GetByRoleCodeAsync(short roleCode, object userState) {
            if ((this.GetByRoleCodeOperationCompleted == null)) {
                this.GetByRoleCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByRoleCodeOperationCompleted);
            }
            this.InvokeAsync("GetByRoleCode", new object[] {
                        roleCode}, this.GetByRoleCodeOperationCompleted, userState);
        }
        
        private void OnGetByRoleCodeOperationCompleted(object arg) {
            if ((this.GetByRoleCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByRoleCodeCompleted(this, new GetByRoleCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByProductCodeAndName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserRoleInfo[] GetByProductCodeAndName(short productCode, string name) {
            object[] results = this.Invoke("GetByProductCodeAndName", new object[] {
                        productCode,
                        name});
            return ((UserRoleInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetByProductCodeAndNameAsync(short productCode, string name) {
            this.GetByProductCodeAndNameAsync(productCode, name, null);
        }
        
        /// <remarks/>
        public void GetByProductCodeAndNameAsync(short productCode, string name, object userState) {
            if ((this.GetByProductCodeAndNameOperationCompleted == null)) {
                this.GetByProductCodeAndNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByProductCodeAndNameOperationCompleted);
            }
            this.InvokeAsync("GetByProductCodeAndName", new object[] {
                        productCode,
                        name}, this.GetByProductCodeAndNameOperationCompleted, userState);
        }
        
        private void OnGetByProductCodeAndNameOperationCompleted(object arg) {
            if ((this.GetByProductCodeAndNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByProductCodeAndNameCompleted(this, new GetByProductCodeAndNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByProductCodeAndUserName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserRoleInfo[] GetByProductCodeAndUserName(short productCode, string userName) {
            object[] results = this.Invoke("GetByProductCodeAndUserName", new object[] {
                        productCode,
                        userName});
            return ((UserRoleInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetByProductCodeAndUserNameAsync(short productCode, string userName) {
            this.GetByProductCodeAndUserNameAsync(productCode, userName, null);
        }
        
        /// <remarks/>
        public void GetByProductCodeAndUserNameAsync(short productCode, string userName, object userState) {
            if ((this.GetByProductCodeAndUserNameOperationCompleted == null)) {
                this.GetByProductCodeAndUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByProductCodeAndUserNameOperationCompleted);
            }
            this.InvokeAsync("GetByProductCodeAndUserName", new object[] {
                        productCode,
                        userName}, this.GetByProductCodeAndUserNameOperationCompleted, userState);
        }
        
        private void OnGetByProductCodeAndUserNameOperationCompleted(object arg) {
            if ((this.GetByProductCodeAndUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByProductCodeAndUserNameCompleted(this, new GetByProductCodeAndUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByProductCodeAndUserNameAndCheckCodeAndType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserRoleInfo[] GetByProductCodeAndUserNameAndCheckCodeAndType(short productCode, string userName, string checkCode, string type) {
            object[] results = this.Invoke("GetByProductCodeAndUserNameAndCheckCodeAndType", new object[] {
                        productCode,
                        userName,
                        checkCode,
                        type});
            return ((UserRoleInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetByProductCodeAndUserNameAndCheckCodeAndTypeAsync(short productCode, string userName, string checkCode, string type) {
            this.GetByProductCodeAndUserNameAndCheckCodeAndTypeAsync(productCode, userName, checkCode, type, null);
        }
        
        /// <remarks/>
        public void GetByProductCodeAndUserNameAndCheckCodeAndTypeAsync(short productCode, string userName, string checkCode, string type, object userState) {
            if ((this.GetByProductCodeAndUserNameAndCheckCodeAndTypeOperationCompleted == null)) {
                this.GetByProductCodeAndUserNameAndCheckCodeAndTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByProductCodeAndUserNameAndCheckCodeAndTypeOperationCompleted);
            }
            this.InvokeAsync("GetByProductCodeAndUserNameAndCheckCodeAndType", new object[] {
                        productCode,
                        userName,
                        checkCode,
                        type}, this.GetByProductCodeAndUserNameAndCheckCodeAndTypeOperationCompleted, userState);
        }
        
        private void OnGetByProductCodeAndUserNameAndCheckCodeAndTypeOperationCompleted(object arg) {
            if ((this.GetByProductCodeAndUserNameAndCheckCodeAndTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByProductCodeAndUserNameAndCheckCodeAndTypeCompleted(this, new GetByProductCodeAndUserNameAndCheckCodeAndTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByCheckCodeAndType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserRoleInfo[] GetByCheckCodeAndType(string checkCode, string type) {
            object[] results = this.Invoke("GetByCheckCodeAndType", new object[] {
                        checkCode,
                        type});
            return ((UserRoleInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetByCheckCodeAndTypeAsync(string checkCode, string type) {
            this.GetByCheckCodeAndTypeAsync(checkCode, type, null);
        }
        
        /// <remarks/>
        public void GetByCheckCodeAndTypeAsync(string checkCode, string type, object userState) {
            if ((this.GetByCheckCodeAndTypeOperationCompleted == null)) {
                this.GetByCheckCodeAndTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByCheckCodeAndTypeOperationCompleted);
            }
            this.InvokeAsync("GetByCheckCodeAndType", new object[] {
                        checkCode,
                        type}, this.GetByCheckCodeAndTypeOperationCompleted, userState);
        }
        
        private void OnGetByCheckCodeAndTypeOperationCompleted(object arg) {
            if ((this.GetByCheckCodeAndTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByCheckCodeAndTypeCompleted(this, new GetByCheckCodeAndTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByCheckCodeAndTypeAndUserName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserRoleInfo[] GetByCheckCodeAndTypeAndUserName(string checkCode, string type, string userName) {
            object[] results = this.Invoke("GetByCheckCodeAndTypeAndUserName", new object[] {
                        checkCode,
                        type,
                        userName});
            return ((UserRoleInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetByCheckCodeAndTypeAndUserNameAsync(string checkCode, string type, string userName) {
            this.GetByCheckCodeAndTypeAndUserNameAsync(checkCode, type, userName, null);
        }
        
        /// <remarks/>
        public void GetByCheckCodeAndTypeAndUserNameAsync(string checkCode, string type, string userName, object userState) {
            if ((this.GetByCheckCodeAndTypeAndUserNameOperationCompleted == null)) {
                this.GetByCheckCodeAndTypeAndUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByCheckCodeAndTypeAndUserNameOperationCompleted);
            }
            this.InvokeAsync("GetByCheckCodeAndTypeAndUserName", new object[] {
                        checkCode,
                        type,
                        userName}, this.GetByCheckCodeAndTypeAndUserNameOperationCompleted, userState);
        }
        
        private void OnGetByCheckCodeAndTypeAndUserNameOperationCompleted(object arg) {
            if ((this.GetByCheckCodeAndTypeAndUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByCheckCodeAndTypeAndUserNameCompleted(this, new GetByCheckCodeAndTypeAndUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNoAccessObj", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNoAccessObj(int rightCode, int productcode) {
            object[] results = this.Invoke("GetNoAccessObj", new object[] {
                        rightCode,
                        productcode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNoAccessObjAsync(int rightCode, int productcode) {
            this.GetNoAccessObjAsync(rightCode, productcode, null);
        }
        
        /// <remarks/>
        public void GetNoAccessObjAsync(int rightCode, int productcode, object userState) {
            if ((this.GetNoAccessObjOperationCompleted == null)) {
                this.GetNoAccessObjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoAccessObjOperationCompleted);
            }
            this.InvokeAsync("GetNoAccessObj", new object[] {
                        rightCode,
                        productcode}, this.GetNoAccessObjOperationCompleted, userState);
        }
        
        private void OnGetNoAccessObjOperationCompleted(object arg) {
            if ((this.GetNoAccessObjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoAccessObjCompleted(this, new GetNoAccessObjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserRoleInfo {
        
        private string userNameField;
        
        private short roleCodeField;
        
        private string checkCodeField;
        
        private string typeField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public short RoleCode {
            get {
                return this.roleCodeField;
            }
            set {
                this.roleCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CheckCode {
            get {
                return this.checkCodeField;
            }
            set {
                this.checkCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertCompletedEventHandler(object sender, InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Insert1CompletedEventHandler(object sender, Insert1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CopyToCompletedEventHandler(object sender, CopyToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Insert2CompletedEventHandler(object sender, Insert2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Delete1CompletedEventHandler(object sender, Delete1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Delete2CompletedEventHandler(object sender, Delete2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ClearAccessCompletedEventHandler(object sender, ClearAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByUserNameCompletedEventHandler(object sender, GetByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserRoleInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserRoleInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByProductCodeCompletedEventHandler(object sender, GetByProductCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByProductCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByProductCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserRoleInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserRoleInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByRoleCodeCompletedEventHandler(object sender, GetByRoleCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByRoleCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByRoleCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserRoleInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserRoleInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByProductCodeAndNameCompletedEventHandler(object sender, GetByProductCodeAndNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByProductCodeAndNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByProductCodeAndNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserRoleInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserRoleInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByProductCodeAndUserNameCompletedEventHandler(object sender, GetByProductCodeAndUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByProductCodeAndUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByProductCodeAndUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserRoleInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserRoleInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByProductCodeAndUserNameAndCheckCodeAndTypeCompletedEventHandler(object sender, GetByProductCodeAndUserNameAndCheckCodeAndTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByProductCodeAndUserNameAndCheckCodeAndTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByProductCodeAndUserNameAndCheckCodeAndTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserRoleInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserRoleInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByCheckCodeAndTypeCompletedEventHandler(object sender, GetByCheckCodeAndTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByCheckCodeAndTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByCheckCodeAndTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserRoleInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserRoleInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByCheckCodeAndTypeAndUserNameCompletedEventHandler(object sender, GetByCheckCodeAndTypeAndUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByCheckCodeAndTypeAndUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByCheckCodeAndTypeAndUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserRoleInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserRoleInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNoAccessObjCompletedEventHandler(object sender, GetNoAccessObjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoAccessObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNoAccessObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591