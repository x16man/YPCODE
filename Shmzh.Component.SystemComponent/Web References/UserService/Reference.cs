//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.225
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.225 版自动生成。
// 
#pragma warning disable 1591

namespace Shmzh.Components.SystemComponent.UserService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserSoap", Namespace="http://tempuri.org/")]
    public partial class User : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSaltOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasRight1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByLoginNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByCompanyAndLoginNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByEmpCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByMobileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByCompanyAndEmpCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByProductCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByGroupCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByRoleCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllByCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAvalibleByCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEmployeeByCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUserByCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllByCompanyAndDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAvalibleByCompanyAndDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAvalibleByCompanyAndDeptIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEmployeeByCompanyAndDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUserByCompanyAndDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInnerUserByCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAvalibleByCompanyAndRightCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchAllAvalibleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchEmpOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBySQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeptMgrOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public User() {
            this.Url = global::Shmzh.Components.SystemComponent.Properties.Settings.Default.Shmzh_Components_SystemComponent_UserService_User;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertCompletedEventHandler InsertCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event CreateSaltCompletedEventHandler CreateSaltCompleted;
        
        /// <remarks/>
        public event SetPasswordCompletedEventHandler SetPasswordCompleted;
        
        /// <remarks/>
        public event HasRightCompletedEventHandler HasRightCompleted;
        
        /// <remarks/>
        public event HasRight1CompletedEventHandler HasRight1Completed;
        
        /// <remarks/>
        public event GetByIdCompletedEventHandler GetByIdCompleted;
        
        /// <remarks/>
        public event GetByLoginNameCompletedEventHandler GetByLoginNameCompleted;
        
        /// <remarks/>
        public event GetByCompanyAndLoginNameCompletedEventHandler GetByCompanyAndLoginNameCompleted;
        
        /// <remarks/>
        public event GetByEmpCodeCompletedEventHandler GetByEmpCodeCompleted;
        
        /// <remarks/>
        public event GetByMobileCompletedEventHandler GetByMobileCompleted;
        
        /// <remarks/>
        public event GetByCompanyAndEmpCodeCompletedEventHandler GetByCompanyAndEmpCodeCompleted;
        
        /// <remarks/>
        public event GetByProductCodeCompletedEventHandler GetByProductCodeCompleted;
        
        /// <remarks/>
        public event GetByGroupCodeCompletedEventHandler GetByGroupCodeCompleted;
        
        /// <remarks/>
        public event GetByRoleCodeCompletedEventHandler GetByRoleCodeCompleted;
        
        /// <remarks/>
        public event GetAllByCompanyCompletedEventHandler GetAllByCompanyCompleted;
        
        /// <remarks/>
        public event GetAllAvalibleByCompanyCompletedEventHandler GetAllAvalibleByCompanyCompleted;
        
        /// <remarks/>
        public event GetAllEmployeeByCompanyCompletedEventHandler GetAllEmployeeByCompanyCompleted;
        
        /// <remarks/>
        public event GetAllUserByCompanyCompletedEventHandler GetAllUserByCompanyCompleted;
        
        /// <remarks/>
        public event GetAllByCompanyAndDeptCompletedEventHandler GetAllByCompanyAndDeptCompleted;
        
        /// <remarks/>
        public event GetAllAvalibleByCompanyAndDeptCompletedEventHandler GetAllAvalibleByCompanyAndDeptCompleted;
        
        /// <remarks/>
        public event GetAllAvalibleByCompanyAndDeptIdsCompletedEventHandler GetAllAvalibleByCompanyAndDeptIdsCompleted;
        
        /// <remarks/>
        public event GetAllEmployeeByCompanyAndDeptCompletedEventHandler GetAllEmployeeByCompanyAndDeptCompleted;
        
        /// <remarks/>
        public event GetAllUserByCompanyAndDeptCompletedEventHandler GetAllUserByCompanyAndDeptCompleted;
        
        /// <remarks/>
        public event GetInnerUserByCompanyCompletedEventHandler GetInnerUserByCompanyCompleted;
        
        /// <remarks/>
        public event GetAllAvalibleByCompanyAndRightCodeCompletedEventHandler GetAllAvalibleByCompanyAndRightCodeCompleted;
        
        /// <remarks/>
        public event SearchAllCompletedEventHandler SearchAllCompleted;
        
        /// <remarks/>
        public event SearchAllAvalibleCompletedEventHandler SearchAllAvalibleCompleted;
        
        /// <remarks/>
        public event SearchEmpCompletedEventHandler SearchEmpCompleted;
        
        /// <remarks/>
        public event SearchUserCompletedEventHandler SearchUserCompleted;
        
        /// <remarks/>
        public event GetBySQLCompletedEventHandler GetBySQLCompleted;
        
        /// <remarks/>
        public event GetDeptMgrCompletedEventHandler GetDeptMgrCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insert(UserInfo userInfo) {
            object[] results = this.Invoke("Insert", new object[] {
                        userInfo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAsync(UserInfo userInfo) {
            this.InsertAsync(userInfo, null);
        }
        
        /// <remarks/>
        public void InsertAsync(UserInfo userInfo, object userState) {
            if ((this.InsertOperationCompleted == null)) {
                this.InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOperationCompleted);
            }
            this.InvokeAsync("Insert", new object[] {
                        userInfo}, this.InsertOperationCompleted, userState);
        }
        
        private void OnInsertOperationCompleted(object arg) {
            if ((this.InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCompleted(this, new InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Update(UserInfo userInfo) {
            object[] results = this.Invoke("Update", new object[] {
                        userInfo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(UserInfo userInfo) {
            this.UpdateAsync(userInfo, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(UserInfo userInfo, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        userInfo}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete(int id) {
            object[] results = this.Invoke("Delete", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(int id) {
            this.DeleteAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(int id, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        id}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateSalt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateSalt() {
            object[] results = this.Invoke("CreateSalt", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSaltAsync() {
            this.CreateSaltAsync(null);
        }
        
        /// <remarks/>
        public void CreateSaltAsync(object userState) {
            if ((this.CreateSaltOperationCompleted == null)) {
                this.CreateSaltOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSaltOperationCompleted);
            }
            this.InvokeAsync("CreateSalt", new object[0], this.CreateSaltOperationCompleted, userState);
        }
        
        private void OnCreateSaltOperationCompleted(object arg) {
            if ((this.CreateSaltCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSaltCompleted(this, new CreateSaltCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetPassword(string loginName, string pwd) {
            object[] results = this.Invoke("SetPassword", new object[] {
                        loginName,
                        pwd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetPasswordAsync(string loginName, string pwd) {
            this.SetPasswordAsync(loginName, pwd, null);
        }
        
        /// <remarks/>
        public void SetPasswordAsync(string loginName, string pwd, object userState) {
            if ((this.SetPasswordOperationCompleted == null)) {
                this.SetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPasswordOperationCompleted);
            }
            this.InvokeAsync("SetPassword", new object[] {
                        loginName,
                        pwd}, this.SetPasswordOperationCompleted, userState);
        }
        
        private void OnSetPasswordOperationCompleted(object arg) {
            if ((this.SetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPasswordCompleted(this, new SetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HasRight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasRight(int rightCode, string loginName) {
            object[] results = this.Invoke("HasRight", new object[] {
                        rightCode,
                        loginName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasRightAsync(int rightCode, string loginName) {
            this.HasRightAsync(rightCode, loginName, null);
        }
        
        /// <remarks/>
        public void HasRightAsync(int rightCode, string loginName, object userState) {
            if ((this.HasRightOperationCompleted == null)) {
                this.HasRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasRightOperationCompleted);
            }
            this.InvokeAsync("HasRight", new object[] {
                        rightCode,
                        loginName}, this.HasRightOperationCompleted, userState);
        }
        
        private void OnHasRightOperationCompleted(object arg) {
            if ((this.HasRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasRightCompleted(this, new HasRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HasRight1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasRight1(int rightCode, string loginName, string docCode) {
            object[] results = this.Invoke("HasRight1", new object[] {
                        rightCode,
                        loginName,
                        docCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasRight1Async(int rightCode, string loginName, string docCode) {
            this.HasRight1Async(rightCode, loginName, docCode, null);
        }
        
        /// <remarks/>
        public void HasRight1Async(int rightCode, string loginName, string docCode, object userState) {
            if ((this.HasRight1OperationCompleted == null)) {
                this.HasRight1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasRight1OperationCompleted);
            }
            this.InvokeAsync("HasRight1", new object[] {
                        rightCode,
                        loginName,
                        docCode}, this.HasRight1OperationCompleted, userState);
        }
        
        private void OnHasRight1OperationCompleted(object arg) {
            if ((this.HasRight1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasRight1Completed(this, new HasRight1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo GetById(int id) {
            object[] results = this.Invoke("GetById", new object[] {
                        id});
            return ((UserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetByIdAsync(int id) {
            this.GetByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetByIdAsync(int id, object userState) {
            if ((this.GetByIdOperationCompleted == null)) {
                this.GetByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByIdOperationCompleted);
            }
            this.InvokeAsync("GetById", new object[] {
                        id}, this.GetByIdOperationCompleted, userState);
        }
        
        private void OnGetByIdOperationCompleted(object arg) {
            if ((this.GetByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByIdCompleted(this, new GetByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByLoginName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo GetByLoginName(string loginName) {
            object[] results = this.Invoke("GetByLoginName", new object[] {
                        loginName});
            return ((UserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetByLoginNameAsync(string loginName) {
            this.GetByLoginNameAsync(loginName, null);
        }
        
        /// <remarks/>
        public void GetByLoginNameAsync(string loginName, object userState) {
            if ((this.GetByLoginNameOperationCompleted == null)) {
                this.GetByLoginNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByLoginNameOperationCompleted);
            }
            this.InvokeAsync("GetByLoginName", new object[] {
                        loginName}, this.GetByLoginNameOperationCompleted, userState);
        }
        
        private void OnGetByLoginNameOperationCompleted(object arg) {
            if ((this.GetByLoginNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByLoginNameCompleted(this, new GetByLoginNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByCompanyAndLoginName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo GetByCompanyAndLoginName(string companyCode, string loginName) {
            object[] results = this.Invoke("GetByCompanyAndLoginName", new object[] {
                        companyCode,
                        loginName});
            return ((UserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetByCompanyAndLoginNameAsync(string companyCode, string loginName) {
            this.GetByCompanyAndLoginNameAsync(companyCode, loginName, null);
        }
        
        /// <remarks/>
        public void GetByCompanyAndLoginNameAsync(string companyCode, string loginName, object userState) {
            if ((this.GetByCompanyAndLoginNameOperationCompleted == null)) {
                this.GetByCompanyAndLoginNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByCompanyAndLoginNameOperationCompleted);
            }
            this.InvokeAsync("GetByCompanyAndLoginName", new object[] {
                        companyCode,
                        loginName}, this.GetByCompanyAndLoginNameOperationCompleted, userState);
        }
        
        private void OnGetByCompanyAndLoginNameOperationCompleted(object arg) {
            if ((this.GetByCompanyAndLoginNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByCompanyAndLoginNameCompleted(this, new GetByCompanyAndLoginNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByEmpCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo GetByEmpCode(string empCode) {
            object[] results = this.Invoke("GetByEmpCode", new object[] {
                        empCode});
            return ((UserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetByEmpCodeAsync(string empCode) {
            this.GetByEmpCodeAsync(empCode, null);
        }
        
        /// <remarks/>
        public void GetByEmpCodeAsync(string empCode, object userState) {
            if ((this.GetByEmpCodeOperationCompleted == null)) {
                this.GetByEmpCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByEmpCodeOperationCompleted);
            }
            this.InvokeAsync("GetByEmpCode", new object[] {
                        empCode}, this.GetByEmpCodeOperationCompleted, userState);
        }
        
        private void OnGetByEmpCodeOperationCompleted(object arg) {
            if ((this.GetByEmpCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByEmpCodeCompleted(this, new GetByEmpCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByMobile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo GetByMobile(string mobile) {
            object[] results = this.Invoke("GetByMobile", new object[] {
                        mobile});
            return ((UserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetByMobileAsync(string mobile) {
            this.GetByMobileAsync(mobile, null);
        }
        
        /// <remarks/>
        public void GetByMobileAsync(string mobile, object userState) {
            if ((this.GetByMobileOperationCompleted == null)) {
                this.GetByMobileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByMobileOperationCompleted);
            }
            this.InvokeAsync("GetByMobile", new object[] {
                        mobile}, this.GetByMobileOperationCompleted, userState);
        }
        
        private void OnGetByMobileOperationCompleted(object arg) {
            if ((this.GetByMobileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByMobileCompleted(this, new GetByMobileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByCompanyAndEmpCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo GetByCompanyAndEmpCode(string companyCode, string empCode) {
            object[] results = this.Invoke("GetByCompanyAndEmpCode", new object[] {
                        companyCode,
                        empCode});
            return ((UserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetByCompanyAndEmpCodeAsync(string companyCode, string empCode) {
            this.GetByCompanyAndEmpCodeAsync(companyCode, empCode, null);
        }
        
        /// <remarks/>
        public void GetByCompanyAndEmpCodeAsync(string companyCode, string empCode, object userState) {
            if ((this.GetByCompanyAndEmpCodeOperationCompleted == null)) {
                this.GetByCompanyAndEmpCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByCompanyAndEmpCodeOperationCompleted);
            }
            this.InvokeAsync("GetByCompanyAndEmpCode", new object[] {
                        companyCode,
                        empCode}, this.GetByCompanyAndEmpCodeOperationCompleted, userState);
        }
        
        private void OnGetByCompanyAndEmpCodeOperationCompleted(object arg) {
            if ((this.GetByCompanyAndEmpCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByCompanyAndEmpCodeCompleted(this, new GetByCompanyAndEmpCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByProductCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetByProductCode(short productCode) {
            object[] results = this.Invoke("GetByProductCode", new object[] {
                        productCode});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetByProductCodeAsync(short productCode) {
            this.GetByProductCodeAsync(productCode, null);
        }
        
        /// <remarks/>
        public void GetByProductCodeAsync(short productCode, object userState) {
            if ((this.GetByProductCodeOperationCompleted == null)) {
                this.GetByProductCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByProductCodeOperationCompleted);
            }
            this.InvokeAsync("GetByProductCode", new object[] {
                        productCode}, this.GetByProductCodeOperationCompleted, userState);
        }
        
        private void OnGetByProductCodeOperationCompleted(object arg) {
            if ((this.GetByProductCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByProductCodeCompleted(this, new GetByProductCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByGroupCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetByGroupCode(short groupCode) {
            object[] results = this.Invoke("GetByGroupCode", new object[] {
                        groupCode});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetByGroupCodeAsync(short groupCode) {
            this.GetByGroupCodeAsync(groupCode, null);
        }
        
        /// <remarks/>
        public void GetByGroupCodeAsync(short groupCode, object userState) {
            if ((this.GetByGroupCodeOperationCompleted == null)) {
                this.GetByGroupCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByGroupCodeOperationCompleted);
            }
            this.InvokeAsync("GetByGroupCode", new object[] {
                        groupCode}, this.GetByGroupCodeOperationCompleted, userState);
        }
        
        private void OnGetByGroupCodeOperationCompleted(object arg) {
            if ((this.GetByGroupCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByGroupCodeCompleted(this, new GetByGroupCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByRoleCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetByRoleCode(short roleCode) {
            object[] results = this.Invoke("GetByRoleCode", new object[] {
                        roleCode});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetByRoleCodeAsync(short roleCode) {
            this.GetByRoleCodeAsync(roleCode, null);
        }
        
        /// <remarks/>
        public void GetByRoleCodeAsync(short roleCode, object userState) {
            if ((this.GetByRoleCodeOperationCompleted == null)) {
                this.GetByRoleCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByRoleCodeOperationCompleted);
            }
            this.InvokeAsync("GetByRoleCode", new object[] {
                        roleCode}, this.GetByRoleCodeOperationCompleted, userState);
        }
        
        private void OnGetByRoleCodeOperationCompleted(object arg) {
            if ((this.GetByRoleCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByRoleCodeCompleted(this, new GetByRoleCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllByCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetAllByCompany(string companyCode) {
            object[] results = this.Invoke("GetAllByCompany", new object[] {
                        companyCode});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllByCompanyAsync(string companyCode) {
            this.GetAllByCompanyAsync(companyCode, null);
        }
        
        /// <remarks/>
        public void GetAllByCompanyAsync(string companyCode, object userState) {
            if ((this.GetAllByCompanyOperationCompleted == null)) {
                this.GetAllByCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllByCompanyOperationCompleted);
            }
            this.InvokeAsync("GetAllByCompany", new object[] {
                        companyCode}, this.GetAllByCompanyOperationCompleted, userState);
        }
        
        private void OnGetAllByCompanyOperationCompleted(object arg) {
            if ((this.GetAllByCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllByCompanyCompleted(this, new GetAllByCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllAvalibleByCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetAllAvalibleByCompany(string companyCode) {
            object[] results = this.Invoke("GetAllAvalibleByCompany", new object[] {
                        companyCode});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAvalibleByCompanyAsync(string companyCode) {
            this.GetAllAvalibleByCompanyAsync(companyCode, null);
        }
        
        /// <remarks/>
        public void GetAllAvalibleByCompanyAsync(string companyCode, object userState) {
            if ((this.GetAllAvalibleByCompanyOperationCompleted == null)) {
                this.GetAllAvalibleByCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAvalibleByCompanyOperationCompleted);
            }
            this.InvokeAsync("GetAllAvalibleByCompany", new object[] {
                        companyCode}, this.GetAllAvalibleByCompanyOperationCompleted, userState);
        }
        
        private void OnGetAllAvalibleByCompanyOperationCompleted(object arg) {
            if ((this.GetAllAvalibleByCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAvalibleByCompanyCompleted(this, new GetAllAvalibleByCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEmployeeByCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetAllEmployeeByCompany(string companyCode) {
            object[] results = this.Invoke("GetAllEmployeeByCompany", new object[] {
                        companyCode});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEmployeeByCompanyAsync(string companyCode) {
            this.GetAllEmployeeByCompanyAsync(companyCode, null);
        }
        
        /// <remarks/>
        public void GetAllEmployeeByCompanyAsync(string companyCode, object userState) {
            if ((this.GetAllEmployeeByCompanyOperationCompleted == null)) {
                this.GetAllEmployeeByCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEmployeeByCompanyOperationCompleted);
            }
            this.InvokeAsync("GetAllEmployeeByCompany", new object[] {
                        companyCode}, this.GetAllEmployeeByCompanyOperationCompleted, userState);
        }
        
        private void OnGetAllEmployeeByCompanyOperationCompleted(object arg) {
            if ((this.GetAllEmployeeByCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEmployeeByCompanyCompleted(this, new GetAllEmployeeByCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUserByCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetAllUserByCompany(string companyCode) {
            object[] results = this.Invoke("GetAllUserByCompany", new object[] {
                        companyCode});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUserByCompanyAsync(string companyCode) {
            this.GetAllUserByCompanyAsync(companyCode, null);
        }
        
        /// <remarks/>
        public void GetAllUserByCompanyAsync(string companyCode, object userState) {
            if ((this.GetAllUserByCompanyOperationCompleted == null)) {
                this.GetAllUserByCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUserByCompanyOperationCompleted);
            }
            this.InvokeAsync("GetAllUserByCompany", new object[] {
                        companyCode}, this.GetAllUserByCompanyOperationCompleted, userState);
        }
        
        private void OnGetAllUserByCompanyOperationCompleted(object arg) {
            if ((this.GetAllUserByCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUserByCompanyCompleted(this, new GetAllUserByCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllByCompanyAndDept", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetAllByCompanyAndDept(string companyCode, string deptCode, bool withChildDept) {
            object[] results = this.Invoke("GetAllByCompanyAndDept", new object[] {
                        companyCode,
                        deptCode,
                        withChildDept});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllByCompanyAndDeptAsync(string companyCode, string deptCode, bool withChildDept) {
            this.GetAllByCompanyAndDeptAsync(companyCode, deptCode, withChildDept, null);
        }
        
        /// <remarks/>
        public void GetAllByCompanyAndDeptAsync(string companyCode, string deptCode, bool withChildDept, object userState) {
            if ((this.GetAllByCompanyAndDeptOperationCompleted == null)) {
                this.GetAllByCompanyAndDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllByCompanyAndDeptOperationCompleted);
            }
            this.InvokeAsync("GetAllByCompanyAndDept", new object[] {
                        companyCode,
                        deptCode,
                        withChildDept}, this.GetAllByCompanyAndDeptOperationCompleted, userState);
        }
        
        private void OnGetAllByCompanyAndDeptOperationCompleted(object arg) {
            if ((this.GetAllByCompanyAndDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllByCompanyAndDeptCompleted(this, new GetAllByCompanyAndDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllAvalibleByCompanyAndDept", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetAllAvalibleByCompanyAndDept(string companyCode, string deptCode, bool withChildDept) {
            object[] results = this.Invoke("GetAllAvalibleByCompanyAndDept", new object[] {
                        companyCode,
                        deptCode,
                        withChildDept});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAvalibleByCompanyAndDeptAsync(string companyCode, string deptCode, bool withChildDept) {
            this.GetAllAvalibleByCompanyAndDeptAsync(companyCode, deptCode, withChildDept, null);
        }
        
        /// <remarks/>
        public void GetAllAvalibleByCompanyAndDeptAsync(string companyCode, string deptCode, bool withChildDept, object userState) {
            if ((this.GetAllAvalibleByCompanyAndDeptOperationCompleted == null)) {
                this.GetAllAvalibleByCompanyAndDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAvalibleByCompanyAndDeptOperationCompleted);
            }
            this.InvokeAsync("GetAllAvalibleByCompanyAndDept", new object[] {
                        companyCode,
                        deptCode,
                        withChildDept}, this.GetAllAvalibleByCompanyAndDeptOperationCompleted, userState);
        }
        
        private void OnGetAllAvalibleByCompanyAndDeptOperationCompleted(object arg) {
            if ((this.GetAllAvalibleByCompanyAndDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAvalibleByCompanyAndDeptCompleted(this, new GetAllAvalibleByCompanyAndDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllAvalibleByCompanyAndDeptIds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetAllAvalibleByCompanyAndDeptIds(string companyCode, string deptIds) {
            object[] results = this.Invoke("GetAllAvalibleByCompanyAndDeptIds", new object[] {
                        companyCode,
                        deptIds});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAvalibleByCompanyAndDeptIdsAsync(string companyCode, string deptIds) {
            this.GetAllAvalibleByCompanyAndDeptIdsAsync(companyCode, deptIds, null);
        }
        
        /// <remarks/>
        public void GetAllAvalibleByCompanyAndDeptIdsAsync(string companyCode, string deptIds, object userState) {
            if ((this.GetAllAvalibleByCompanyAndDeptIdsOperationCompleted == null)) {
                this.GetAllAvalibleByCompanyAndDeptIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAvalibleByCompanyAndDeptIdsOperationCompleted);
            }
            this.InvokeAsync("GetAllAvalibleByCompanyAndDeptIds", new object[] {
                        companyCode,
                        deptIds}, this.GetAllAvalibleByCompanyAndDeptIdsOperationCompleted, userState);
        }
        
        private void OnGetAllAvalibleByCompanyAndDeptIdsOperationCompleted(object arg) {
            if ((this.GetAllAvalibleByCompanyAndDeptIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAvalibleByCompanyAndDeptIdsCompleted(this, new GetAllAvalibleByCompanyAndDeptIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEmployeeByCompanyAndDept", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetAllEmployeeByCompanyAndDept(string companyCode, string deptCode, bool withChildDept) {
            object[] results = this.Invoke("GetAllEmployeeByCompanyAndDept", new object[] {
                        companyCode,
                        deptCode,
                        withChildDept});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEmployeeByCompanyAndDeptAsync(string companyCode, string deptCode, bool withChildDept) {
            this.GetAllEmployeeByCompanyAndDeptAsync(companyCode, deptCode, withChildDept, null);
        }
        
        /// <remarks/>
        public void GetAllEmployeeByCompanyAndDeptAsync(string companyCode, string deptCode, bool withChildDept, object userState) {
            if ((this.GetAllEmployeeByCompanyAndDeptOperationCompleted == null)) {
                this.GetAllEmployeeByCompanyAndDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEmployeeByCompanyAndDeptOperationCompleted);
            }
            this.InvokeAsync("GetAllEmployeeByCompanyAndDept", new object[] {
                        companyCode,
                        deptCode,
                        withChildDept}, this.GetAllEmployeeByCompanyAndDeptOperationCompleted, userState);
        }
        
        private void OnGetAllEmployeeByCompanyAndDeptOperationCompleted(object arg) {
            if ((this.GetAllEmployeeByCompanyAndDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEmployeeByCompanyAndDeptCompleted(this, new GetAllEmployeeByCompanyAndDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUserByCompanyAndDept", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetAllUserByCompanyAndDept(string companyCode, string deptCode, bool withChildDept) {
            object[] results = this.Invoke("GetAllUserByCompanyAndDept", new object[] {
                        companyCode,
                        deptCode,
                        withChildDept});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUserByCompanyAndDeptAsync(string companyCode, string deptCode, bool withChildDept) {
            this.GetAllUserByCompanyAndDeptAsync(companyCode, deptCode, withChildDept, null);
        }
        
        /// <remarks/>
        public void GetAllUserByCompanyAndDeptAsync(string companyCode, string deptCode, bool withChildDept, object userState) {
            if ((this.GetAllUserByCompanyAndDeptOperationCompleted == null)) {
                this.GetAllUserByCompanyAndDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUserByCompanyAndDeptOperationCompleted);
            }
            this.InvokeAsync("GetAllUserByCompanyAndDept", new object[] {
                        companyCode,
                        deptCode,
                        withChildDept}, this.GetAllUserByCompanyAndDeptOperationCompleted, userState);
        }
        
        private void OnGetAllUserByCompanyAndDeptOperationCompleted(object arg) {
            if ((this.GetAllUserByCompanyAndDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUserByCompanyAndDeptCompleted(this, new GetAllUserByCompanyAndDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInnerUserByCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetInnerUserByCompany(string companyCode) {
            object[] results = this.Invoke("GetInnerUserByCompany", new object[] {
                        companyCode});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInnerUserByCompanyAsync(string companyCode) {
            this.GetInnerUserByCompanyAsync(companyCode, null);
        }
        
        /// <remarks/>
        public void GetInnerUserByCompanyAsync(string companyCode, object userState) {
            if ((this.GetInnerUserByCompanyOperationCompleted == null)) {
                this.GetInnerUserByCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInnerUserByCompanyOperationCompleted);
            }
            this.InvokeAsync("GetInnerUserByCompany", new object[] {
                        companyCode}, this.GetInnerUserByCompanyOperationCompleted, userState);
        }
        
        private void OnGetInnerUserByCompanyOperationCompleted(object arg) {
            if ((this.GetInnerUserByCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInnerUserByCompanyCompleted(this, new GetInnerUserByCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllAvalibleByCompanyAndRightCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetAllAvalibleByCompanyAndRightCode(string companyCode, short rightCode) {
            object[] results = this.Invoke("GetAllAvalibleByCompanyAndRightCode", new object[] {
                        companyCode,
                        rightCode});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAvalibleByCompanyAndRightCodeAsync(string companyCode, short rightCode) {
            this.GetAllAvalibleByCompanyAndRightCodeAsync(companyCode, rightCode, null);
        }
        
        /// <remarks/>
        public void GetAllAvalibleByCompanyAndRightCodeAsync(string companyCode, short rightCode, object userState) {
            if ((this.GetAllAvalibleByCompanyAndRightCodeOperationCompleted == null)) {
                this.GetAllAvalibleByCompanyAndRightCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAvalibleByCompanyAndRightCodeOperationCompleted);
            }
            this.InvokeAsync("GetAllAvalibleByCompanyAndRightCode", new object[] {
                        companyCode,
                        rightCode}, this.GetAllAvalibleByCompanyAndRightCodeOperationCompleted, userState);
        }
        
        private void OnGetAllAvalibleByCompanyAndRightCodeOperationCompleted(object arg) {
            if ((this.GetAllAvalibleByCompanyAndRightCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAvalibleByCompanyAndRightCodeCompleted(this, new GetAllAvalibleByCompanyAndRightCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] SearchAll(string companyCode, string name) {
            object[] results = this.Invoke("SearchAll", new object[] {
                        companyCode,
                        name});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchAllAsync(string companyCode, string name) {
            this.SearchAllAsync(companyCode, name, null);
        }
        
        /// <remarks/>
        public void SearchAllAsync(string companyCode, string name, object userState) {
            if ((this.SearchAllOperationCompleted == null)) {
                this.SearchAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchAllOperationCompleted);
            }
            this.InvokeAsync("SearchAll", new object[] {
                        companyCode,
                        name}, this.SearchAllOperationCompleted, userState);
        }
        
        private void OnSearchAllOperationCompleted(object arg) {
            if ((this.SearchAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchAllCompleted(this, new SearchAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchAllAvalible", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] SearchAllAvalible(string companyCode, string name) {
            object[] results = this.Invoke("SearchAllAvalible", new object[] {
                        companyCode,
                        name});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchAllAvalibleAsync(string companyCode, string name) {
            this.SearchAllAvalibleAsync(companyCode, name, null);
        }
        
        /// <remarks/>
        public void SearchAllAvalibleAsync(string companyCode, string name, object userState) {
            if ((this.SearchAllAvalibleOperationCompleted == null)) {
                this.SearchAllAvalibleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchAllAvalibleOperationCompleted);
            }
            this.InvokeAsync("SearchAllAvalible", new object[] {
                        companyCode,
                        name}, this.SearchAllAvalibleOperationCompleted, userState);
        }
        
        private void OnSearchAllAvalibleOperationCompleted(object arg) {
            if ((this.SearchAllAvalibleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchAllAvalibleCompleted(this, new SearchAllAvalibleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchEmp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] SearchEmp(string companyCode, string name) {
            object[] results = this.Invoke("SearchEmp", new object[] {
                        companyCode,
                        name});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchEmpAsync(string companyCode, string name) {
            this.SearchEmpAsync(companyCode, name, null);
        }
        
        /// <remarks/>
        public void SearchEmpAsync(string companyCode, string name, object userState) {
            if ((this.SearchEmpOperationCompleted == null)) {
                this.SearchEmpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchEmpOperationCompleted);
            }
            this.InvokeAsync("SearchEmp", new object[] {
                        companyCode,
                        name}, this.SearchEmpOperationCompleted, userState);
        }
        
        private void OnSearchEmpOperationCompleted(object arg) {
            if ((this.SearchEmpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchEmpCompleted(this, new SearchEmpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] SearchUser(string companyCode, string name) {
            object[] results = this.Invoke("SearchUser", new object[] {
                        companyCode,
                        name});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchUserAsync(string companyCode, string name) {
            this.SearchUserAsync(companyCode, name, null);
        }
        
        /// <remarks/>
        public void SearchUserAsync(string companyCode, string name, object userState) {
            if ((this.SearchUserOperationCompleted == null)) {
                this.SearchUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUserOperationCompleted);
            }
            this.InvokeAsync("SearchUser", new object[] {
                        companyCode,
                        name}, this.SearchUserOperationCompleted, userState);
        }
        
        private void OnSearchUserOperationCompleted(object arg) {
            if ((this.SearchUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUserCompleted(this, new SearchUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBySQL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetBySQL(string sqlStatement) {
            object[] results = this.Invoke("GetBySQL", new object[] {
                        sqlStatement});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBySQLAsync(string sqlStatement) {
            this.GetBySQLAsync(sqlStatement, null);
        }
        
        /// <remarks/>
        public void GetBySQLAsync(string sqlStatement, object userState) {
            if ((this.GetBySQLOperationCompleted == null)) {
                this.GetBySQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBySQLOperationCompleted);
            }
            this.InvokeAsync("GetBySQL", new object[] {
                        sqlStatement}, this.GetBySQLOperationCompleted, userState);
        }
        
        private void OnGetBySQLOperationCompleted(object arg) {
            if ((this.GetBySQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBySQLCompleted(this, new GetBySQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeptMgr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDeptMgr(string deptCode) {
            object[] results = this.Invoke("GetDeptMgr", new object[] {
                        deptCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeptMgrAsync(string deptCode) {
            this.GetDeptMgrAsync(deptCode, null);
        }
        
        /// <remarks/>
        public void GetDeptMgrAsync(string deptCode, object userState) {
            if ((this.GetDeptMgrOperationCompleted == null)) {
                this.GetDeptMgrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeptMgrOperationCompleted);
            }
            this.InvokeAsync("GetDeptMgr", new object[] {
                        deptCode}, this.GetDeptMgrOperationCompleted, userState);
        }
        
        private void OnGetDeptMgrOperationCompleted(object arg) {
            if ((this.GetDeptMgrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeptMgrCompleted(this, new GetDeptMgrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserInfo {
        
        private int pKIDField;
        
        private string empCodeField;
        
        private string empCoField;
        
        private string deptCodeField;
        
        private string deptNameField;
        
        private string empNameField;
        
        private string empEnNameField;
        
        private string genderField;
        
        private System.DateTime birthDayField;
        
        private string loginNameField;
        
        private string password1Field;
        
        private string password2Field;
        
        private string appandCodeField;
        
        private string empStateField;
        
        private string dutyCodeField;
        
        private string dutyNameField;
        
        private string dutyEnNameField;
        
        private string iDCardField;
        
        private string officeCallField;
        
        private string officeSubCallField;
        
        private string mobileField;
        
        private string officeFaxField;
        
        private string eMailField;
        
        private string isUserField;
        
        private string userStateField;
        
        private string isEmpField;
        
        private System.DateTime createDateField;
        
        private System.DateTime inDateField;
        
        private string isLeaveField;
        
        private System.DateTime leaveDateField;
        
        private int serialNoField;
        
        private string uICultureField;
        
        /// <remarks/>
        public int PKID {
            get {
                return this.pKIDField;
            }
            set {
                this.pKIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmpCode {
            get {
                return this.empCodeField;
            }
            set {
                this.empCodeField = value;
            }
        }
        
        /// <remarks/>
        public string EmpCo {
            get {
                return this.empCoField;
            }
            set {
                this.empCoField = value;
            }
        }
        
        /// <remarks/>
        public string DeptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptName {
            get {
                return this.deptNameField;
            }
            set {
                this.deptNameField = value;
            }
        }
        
        /// <remarks/>
        public string EmpName {
            get {
                return this.empNameField;
            }
            set {
                this.empNameField = value;
            }
        }
        
        /// <remarks/>
        public string EmpEnName {
            get {
                return this.empEnNameField;
            }
            set {
                this.empEnNameField = value;
            }
        }
        
        /// <remarks/>
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BirthDay {
            get {
                return this.birthDayField;
            }
            set {
                this.birthDayField = value;
            }
        }
        
        /// <remarks/>
        public string LoginName {
            get {
                return this.loginNameField;
            }
            set {
                this.loginNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password1 {
            get {
                return this.password1Field;
            }
            set {
                this.password1Field = value;
            }
        }
        
        /// <remarks/>
        public string Password2 {
            get {
                return this.password2Field;
            }
            set {
                this.password2Field = value;
            }
        }
        
        /// <remarks/>
        public string AppandCode {
            get {
                return this.appandCodeField;
            }
            set {
                this.appandCodeField = value;
            }
        }
        
        /// <remarks/>
        public string EmpState {
            get {
                return this.empStateField;
            }
            set {
                this.empStateField = value;
            }
        }
        
        /// <remarks/>
        public string DutyCode {
            get {
                return this.dutyCodeField;
            }
            set {
                this.dutyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DutyName {
            get {
                return this.dutyNameField;
            }
            set {
                this.dutyNameField = value;
            }
        }
        
        /// <remarks/>
        public string DutyEnName {
            get {
                return this.dutyEnNameField;
            }
            set {
                this.dutyEnNameField = value;
            }
        }
        
        /// <remarks/>
        public string IDCard {
            get {
                return this.iDCardField;
            }
            set {
                this.iDCardField = value;
            }
        }
        
        /// <remarks/>
        public string OfficeCall {
            get {
                return this.officeCallField;
            }
            set {
                this.officeCallField = value;
            }
        }
        
        /// <remarks/>
        public string OfficeSubCall {
            get {
                return this.officeSubCallField;
            }
            set {
                this.officeSubCallField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public string OfficeFax {
            get {
                return this.officeFaxField;
            }
            set {
                this.officeFaxField = value;
            }
        }
        
        /// <remarks/>
        public string EMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
            }
        }
        
        /// <remarks/>
        public string IsUser {
            get {
                return this.isUserField;
            }
            set {
                this.isUserField = value;
            }
        }
        
        /// <remarks/>
        public string UserState {
            get {
                return this.userStateField;
            }
            set {
                this.userStateField = value;
            }
        }
        
        /// <remarks/>
        public string IsEmp {
            get {
                return this.isEmpField;
            }
            set {
                this.isEmpField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InDate {
            get {
                return this.inDateField;
            }
            set {
                this.inDateField = value;
            }
        }
        
        /// <remarks/>
        public string IsLeave {
            get {
                return this.isLeaveField;
            }
            set {
                this.isLeaveField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LeaveDate {
            get {
                return this.leaveDateField;
            }
            set {
                this.leaveDateField = value;
            }
        }
        
        /// <remarks/>
        public int SerialNo {
            get {
                return this.serialNoField;
            }
            set {
                this.serialNoField = value;
            }
        }
        
        /// <remarks/>
        public string UICulture {
            get {
                return this.uICultureField;
            }
            set {
                this.uICultureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertCompletedEventHandler(object sender, InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateSaltCompletedEventHandler(object sender, CreateSaltCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSaltCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSaltCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetPasswordCompletedEventHandler(object sender, SetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HasRightCompletedEventHandler(object sender, HasRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HasRight1CompletedEventHandler(object sender, HasRight1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasRight1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasRight1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByIdCompletedEventHandler(object sender, GetByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByLoginNameCompletedEventHandler(object sender, GetByLoginNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByLoginNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByLoginNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByCompanyAndLoginNameCompletedEventHandler(object sender, GetByCompanyAndLoginNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByCompanyAndLoginNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByCompanyAndLoginNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByEmpCodeCompletedEventHandler(object sender, GetByEmpCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByEmpCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByEmpCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByMobileCompletedEventHandler(object sender, GetByMobileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByCompanyAndEmpCodeCompletedEventHandler(object sender, GetByCompanyAndEmpCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByCompanyAndEmpCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByCompanyAndEmpCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByProductCodeCompletedEventHandler(object sender, GetByProductCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByProductCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByProductCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByGroupCodeCompletedEventHandler(object sender, GetByGroupCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByGroupCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByGroupCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByRoleCodeCompletedEventHandler(object sender, GetByRoleCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByRoleCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByRoleCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllByCompanyCompletedEventHandler(object sender, GetAllByCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllByCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllByCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllAvalibleByCompanyCompletedEventHandler(object sender, GetAllAvalibleByCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAvalibleByCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAvalibleByCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllEmployeeByCompanyCompletedEventHandler(object sender, GetAllEmployeeByCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEmployeeByCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEmployeeByCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllUserByCompanyCompletedEventHandler(object sender, GetAllUserByCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUserByCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUserByCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllByCompanyAndDeptCompletedEventHandler(object sender, GetAllByCompanyAndDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllByCompanyAndDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllByCompanyAndDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllAvalibleByCompanyAndDeptCompletedEventHandler(object sender, GetAllAvalibleByCompanyAndDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAvalibleByCompanyAndDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAvalibleByCompanyAndDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllAvalibleByCompanyAndDeptIdsCompletedEventHandler(object sender, GetAllAvalibleByCompanyAndDeptIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAvalibleByCompanyAndDeptIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAvalibleByCompanyAndDeptIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllEmployeeByCompanyAndDeptCompletedEventHandler(object sender, GetAllEmployeeByCompanyAndDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEmployeeByCompanyAndDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEmployeeByCompanyAndDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllUserByCompanyAndDeptCompletedEventHandler(object sender, GetAllUserByCompanyAndDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUserByCompanyAndDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUserByCompanyAndDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInnerUserByCompanyCompletedEventHandler(object sender, GetInnerUserByCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInnerUserByCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInnerUserByCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllAvalibleByCompanyAndRightCodeCompletedEventHandler(object sender, GetAllAvalibleByCompanyAndRightCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAvalibleByCompanyAndRightCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAvalibleByCompanyAndRightCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchAllCompletedEventHandler(object sender, SearchAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchAllAvalibleCompletedEventHandler(object sender, SearchAllAvalibleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchAllAvalibleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchAllAvalibleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchEmpCompletedEventHandler(object sender, SearchEmpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchEmpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchEmpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchUserCompletedEventHandler(object sender, SearchUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBySQLCompletedEventHandler(object sender, GetBySQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBySQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBySQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDeptMgrCompletedEventHandler(object sender, GetDeptMgrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeptMgrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeptMgrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591