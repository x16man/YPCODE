//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace Shmzh.Monitor.Data.GraphSchemaService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GraphSchemaSoap", Namespace="http://tempuri.org/")]
    public partial class GraphSchema : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByCategoryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNoCategorySchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLoginNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeepSaveOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GraphSchema() {
            this.Url = global::Shmzh.Monitor.Data.Properties.Settings.Default.Shmzh_Monitor_Data_GraphSchemaService_GraphSchema;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetByIdCompletedEventHandler GetByIdCompleted;
        
        /// <remarks/>
        public event GetByNameCompletedEventHandler GetByNameCompleted;
        
        /// <remarks/>
        public event GetAllCompletedEventHandler GetAllCompleted;
        
        /// <remarks/>
        public event GetByCategoryIdCompletedEventHandler GetByCategoryIdCompleted;
        
        /// <remarks/>
        public event GetNoCategorySchemaCompletedEventHandler GetNoCategorySchemaCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event InsertCompletedEventHandler InsertCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event UpdateLoginNameCompletedEventHandler UpdateLoginNameCompleted;
        
        /// <remarks/>
        public event DeepSaveCompletedEventHandler DeepSaveCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GraphSchemaInfo GetById(int schemaId) {
            object[] results = this.Invoke("GetById", new object[] {
                        schemaId});
            return ((GraphSchemaInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetByIdAsync(int schemaId) {
            this.GetByIdAsync(schemaId, null);
        }
        
        /// <remarks/>
        public void GetByIdAsync(int schemaId, object userState) {
            if ((this.GetByIdOperationCompleted == null)) {
                this.GetByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByIdOperationCompleted);
            }
            this.InvokeAsync("GetById", new object[] {
                        schemaId}, this.GetByIdOperationCompleted, userState);
        }
        
        private void OnGetByIdOperationCompleted(object arg) {
            if ((this.GetByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByIdCompleted(this, new GetByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GraphSchemaInfo GetByName(string name) {
            object[] results = this.Invoke("GetByName", new object[] {
                        name});
            return ((GraphSchemaInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetByNameAsync(string name) {
            this.GetByNameAsync(name, null);
        }
        
        /// <remarks/>
        public void GetByNameAsync(string name, object userState) {
            if ((this.GetByNameOperationCompleted == null)) {
                this.GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByNameOperationCompleted);
            }
            this.InvokeAsync("GetByName", new object[] {
                        name}, this.GetByNameOperationCompleted, userState);
        }
        
        private void OnGetByNameOperationCompleted(object arg) {
            if ((this.GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByNameCompleted(this, new GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GraphSchemaInfo[] GetAll() {
            object[] results = this.Invoke("GetAll", new object[0]);
            return ((GraphSchemaInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAsync() {
            this.GetAllAsync(null);
        }
        
        /// <remarks/>
        public void GetAllAsync(object userState) {
            if ((this.GetAllOperationCompleted == null)) {
                this.GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOperationCompleted);
            }
            this.InvokeAsync("GetAll", new object[0], this.GetAllOperationCompleted, userState);
        }
        
        private void OnGetAllOperationCompleted(object arg) {
            if ((this.GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCompleted(this, new GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetByCategoryId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GraphSchemaInfo[] GetByCategoryId(int categoryId) {
            object[] results = this.Invoke("GetByCategoryId", new object[] {
                        categoryId});
            return ((GraphSchemaInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetByCategoryIdAsync(int categoryId) {
            this.GetByCategoryIdAsync(categoryId, null);
        }
        
        /// <remarks/>
        public void GetByCategoryIdAsync(int categoryId, object userState) {
            if ((this.GetByCategoryIdOperationCompleted == null)) {
                this.GetByCategoryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByCategoryIdOperationCompleted);
            }
            this.InvokeAsync("GetByCategoryId", new object[] {
                        categoryId}, this.GetByCategoryIdOperationCompleted, userState);
        }
        
        private void OnGetByCategoryIdOperationCompleted(object arg) {
            if ((this.GetByCategoryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByCategoryIdCompleted(this, new GetByCategoryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNoCategorySchema", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GraphSchemaInfo[] GetNoCategorySchema(string loginName) {
            object[] results = this.Invoke("GetNoCategorySchema", new object[] {
                        loginName});
            return ((GraphSchemaInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNoCategorySchemaAsync(string loginName) {
            this.GetNoCategorySchemaAsync(loginName, null);
        }
        
        /// <remarks/>
        public void GetNoCategorySchemaAsync(string loginName, object userState) {
            if ((this.GetNoCategorySchemaOperationCompleted == null)) {
                this.GetNoCategorySchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoCategorySchemaOperationCompleted);
            }
            this.InvokeAsync("GetNoCategorySchema", new object[] {
                        loginName}, this.GetNoCategorySchemaOperationCompleted, userState);
        }
        
        private void OnGetNoCategorySchemaOperationCompleted(object arg) {
            if ((this.GetNoCategorySchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoCategorySchemaCompleted(this, new GetNoCategorySchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete(int schemaId) {
            object[] results = this.Invoke("Delete", new object[] {
                        schemaId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(int schemaId) {
            this.DeleteAsync(schemaId, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(int schemaId, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        schemaId}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Insert(GraphSchemaInfo graphSchemaInfo) {
            object[] results = this.Invoke("Insert", new object[] {
                        graphSchemaInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAsync(GraphSchemaInfo graphSchemaInfo) {
            this.InsertAsync(graphSchemaInfo, null);
        }
        
        /// <remarks/>
        public void InsertAsync(GraphSchemaInfo graphSchemaInfo, object userState) {
            if ((this.InsertOperationCompleted == null)) {
                this.InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOperationCompleted);
            }
            this.InvokeAsync("Insert", new object[] {
                        graphSchemaInfo}, this.InsertOperationCompleted, userState);
        }
        
        private void OnInsertOperationCompleted(object arg) {
            if ((this.InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCompleted(this, new InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Update(GraphSchemaInfo graphSchemaInfo) {
            object[] results = this.Invoke("Update", new object[] {
                        graphSchemaInfo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(GraphSchemaInfo graphSchemaInfo) {
            this.UpdateAsync(graphSchemaInfo, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(GraphSchemaInfo graphSchemaInfo, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        graphSchemaInfo}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLoginName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLoginName(int schemaId, string referLoginName) {
            object[] results = this.Invoke("UpdateLoginName", new object[] {
                        schemaId,
                        referLoginName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLoginNameAsync(int schemaId, string referLoginName) {
            this.UpdateLoginNameAsync(schemaId, referLoginName, null);
        }
        
        /// <remarks/>
        public void UpdateLoginNameAsync(int schemaId, string referLoginName, object userState) {
            if ((this.UpdateLoginNameOperationCompleted == null)) {
                this.UpdateLoginNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLoginNameOperationCompleted);
            }
            this.InvokeAsync("UpdateLoginName", new object[] {
                        schemaId,
                        referLoginName}, this.UpdateLoginNameOperationCompleted, userState);
        }
        
        private void OnUpdateLoginNameOperationCompleted(object arg) {
            if ((this.UpdateLoginNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLoginNameCompleted(this, new UpdateLoginNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeepSave", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeepSave(GraphSchemaInfo obj) {
            object[] results = this.Invoke("DeepSave", new object[] {
                        obj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeepSaveAsync(GraphSchemaInfo obj) {
            this.DeepSaveAsync(obj, null);
        }
        
        /// <remarks/>
        public void DeepSaveAsync(GraphSchemaInfo obj, object userState) {
            if ((this.DeepSaveOperationCompleted == null)) {
                this.DeepSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeepSaveOperationCompleted);
            }
            this.InvokeAsync("DeepSave", new object[] {
                        obj}, this.DeepSaveOperationCompleted, userState);
        }
        
        private void OnDeepSaveOperationCompleted(object arg) {
            if ((this.DeepSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeepSaveCompleted(this, new DeepSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GraphSchemaInfo {
        
        private int schemaIdField;
        
        private string nameField;
        
        private bool isValidField;
        
        private string layoutField;
        
        private string remarkField;
        
        private string dataTypeField;
        
        private int tabWidthField;
        
        private GraphSchemaItemInfo[] itemListField;
        
        private FloatingBlockInfo[] floatingBlockInfosField;
        
        private GraphSchemaTabInfo[] graphSchemaTabInfosField;
        
        private string titleField;
        
        private bool titleVisibleField;
        
        private float titleFontSizeField;
        
        private string titleFontFamilyField;
        
        private bool legendVisibleField;
        
        private float legendFontSizeField;
        
        private string legendFontFamilyField;
        
        private bool legendIsShowSymbolsField;
        
        private bool legendIsHStackField;
        
        private string legendPositionField;
        
        private string marginField;
        
        private float innerPaneGapField;
        
        private string referLoginNameField;
        
        private System.DateTime referOpTimeField;
        
        /// <remarks/>
        public int SchemaId {
            get {
                return this.schemaIdField;
            }
            set {
                this.schemaIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsValid {
            get {
                return this.isValidField;
            }
            set {
                this.isValidField = value;
            }
        }
        
        /// <remarks/>
        public string Layout {
            get {
                return this.layoutField;
            }
            set {
                this.layoutField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public int TabWidth {
            get {
                return this.tabWidthField;
            }
            set {
                this.tabWidthField = value;
            }
        }
        
        /// <remarks/>
        public GraphSchemaItemInfo[] ItemList {
            get {
                return this.itemListField;
            }
            set {
                this.itemListField = value;
            }
        }
        
        /// <remarks/>
        public FloatingBlockInfo[] FloatingBlockInfos {
            get {
                return this.floatingBlockInfosField;
            }
            set {
                this.floatingBlockInfosField = value;
            }
        }
        
        /// <remarks/>
        public GraphSchemaTabInfo[] GraphSchemaTabInfos {
            get {
                return this.graphSchemaTabInfosField;
            }
            set {
                this.graphSchemaTabInfosField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public bool TitleVisible {
            get {
                return this.titleVisibleField;
            }
            set {
                this.titleVisibleField = value;
            }
        }
        
        /// <remarks/>
        public float TitleFontSize {
            get {
                return this.titleFontSizeField;
            }
            set {
                this.titleFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string TitleFontFamily {
            get {
                return this.titleFontFamilyField;
            }
            set {
                this.titleFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public bool LegendVisible {
            get {
                return this.legendVisibleField;
            }
            set {
                this.legendVisibleField = value;
            }
        }
        
        /// <remarks/>
        public float LegendFontSize {
            get {
                return this.legendFontSizeField;
            }
            set {
                this.legendFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string LegendFontFamily {
            get {
                return this.legendFontFamilyField;
            }
            set {
                this.legendFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public bool LegendIsShowSymbols {
            get {
                return this.legendIsShowSymbolsField;
            }
            set {
                this.legendIsShowSymbolsField = value;
            }
        }
        
        /// <remarks/>
        public bool LegendIsHStack {
            get {
                return this.legendIsHStackField;
            }
            set {
                this.legendIsHStackField = value;
            }
        }
        
        /// <remarks/>
        public string LegendPosition {
            get {
                return this.legendPositionField;
            }
            set {
                this.legendPositionField = value;
            }
        }
        
        /// <remarks/>
        public string Margin {
            get {
                return this.marginField;
            }
            set {
                this.marginField = value;
            }
        }
        
        /// <remarks/>
        public float InnerPaneGap {
            get {
                return this.innerPaneGapField;
            }
            set {
                this.innerPaneGapField = value;
            }
        }
        
        /// <remarks/>
        public string ReferLoginName {
            get {
                return this.referLoginNameField;
            }
            set {
                this.referLoginNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ReferOpTime {
            get {
                return this.referOpTimeField;
            }
            set {
                this.referOpTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GraphSchemaItemInfo {
        
        private int itemIdField;
        
        private int schemaIdField;
        
        private string titleField;
        
        private bool titleVisibleField;
        
        private float titleFontSizeField;
        
        private string titleFontFamilyField;
        
        private bool legendVisibleField;
        
        private float legendFontSizeField;
        
        private string legendFontFamilyField;
        
        private bool legendIsShowSymbolsField;
        
        private bool legendIsHStackField;
        
        private string legendPositionField;
        
        private string xAxisField;
        
        private bool xScaleVisibleField;
        
        private float xScaleFontSizeField;
        
        private string xScaleFontFamilyField;
        
        private bool xTitleVisibleField;
        
        private float xTitleFontSizeField;
        
        private string xTitleFontFamilyField;
        
        private string yAxisField;
        
        private bool yScaleVisibleField;
        
        private float yScaleFontSizeField;
        
        private string yScaleFontFaminlyField;
        
        private bool yTitleVisibleField;
        
        private float yTitleFontSizeField;
        
        private string yTitleFontFamilyField;
        
        private float minSpaceLField;
        
        private float minSpaceRField;
        
        private int serialNumberField;
        
        private string xScaleFormatField;
        
        private string yScaleFormatField;
        
        private GraphSchemaTagInfo[] tagListField;
        
        /// <remarks/>
        public int ItemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
        
        /// <remarks/>
        public int SchemaId {
            get {
                return this.schemaIdField;
            }
            set {
                this.schemaIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public bool TitleVisible {
            get {
                return this.titleVisibleField;
            }
            set {
                this.titleVisibleField = value;
            }
        }
        
        /// <remarks/>
        public float TitleFontSize {
            get {
                return this.titleFontSizeField;
            }
            set {
                this.titleFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string TitleFontFamily {
            get {
                return this.titleFontFamilyField;
            }
            set {
                this.titleFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public bool LegendVisible {
            get {
                return this.legendVisibleField;
            }
            set {
                this.legendVisibleField = value;
            }
        }
        
        /// <remarks/>
        public float LegendFontSize {
            get {
                return this.legendFontSizeField;
            }
            set {
                this.legendFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string LegendFontFamily {
            get {
                return this.legendFontFamilyField;
            }
            set {
                this.legendFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public bool LegendIsShowSymbols {
            get {
                return this.legendIsShowSymbolsField;
            }
            set {
                this.legendIsShowSymbolsField = value;
            }
        }
        
        /// <remarks/>
        public bool LegendIsHStack {
            get {
                return this.legendIsHStackField;
            }
            set {
                this.legendIsHStackField = value;
            }
        }
        
        /// <remarks/>
        public string LegendPosition {
            get {
                return this.legendPositionField;
            }
            set {
                this.legendPositionField = value;
            }
        }
        
        /// <remarks/>
        public string XAxis {
            get {
                return this.xAxisField;
            }
            set {
                this.xAxisField = value;
            }
        }
        
        /// <remarks/>
        public bool XScaleVisible {
            get {
                return this.xScaleVisibleField;
            }
            set {
                this.xScaleVisibleField = value;
            }
        }
        
        /// <remarks/>
        public float XScaleFontSize {
            get {
                return this.xScaleFontSizeField;
            }
            set {
                this.xScaleFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string XScaleFontFamily {
            get {
                return this.xScaleFontFamilyField;
            }
            set {
                this.xScaleFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public bool XTitleVisible {
            get {
                return this.xTitleVisibleField;
            }
            set {
                this.xTitleVisibleField = value;
            }
        }
        
        /// <remarks/>
        public float XTitleFontSize {
            get {
                return this.xTitleFontSizeField;
            }
            set {
                this.xTitleFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string XTitleFontFamily {
            get {
                return this.xTitleFontFamilyField;
            }
            set {
                this.xTitleFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public string YAxis {
            get {
                return this.yAxisField;
            }
            set {
                this.yAxisField = value;
            }
        }
        
        /// <remarks/>
        public bool YScaleVisible {
            get {
                return this.yScaleVisibleField;
            }
            set {
                this.yScaleVisibleField = value;
            }
        }
        
        /// <remarks/>
        public float YScaleFontSize {
            get {
                return this.yScaleFontSizeField;
            }
            set {
                this.yScaleFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string YScaleFontFaminly {
            get {
                return this.yScaleFontFaminlyField;
            }
            set {
                this.yScaleFontFaminlyField = value;
            }
        }
        
        /// <remarks/>
        public bool YTitleVisible {
            get {
                return this.yTitleVisibleField;
            }
            set {
                this.yTitleVisibleField = value;
            }
        }
        
        /// <remarks/>
        public float YTitleFontSize {
            get {
                return this.yTitleFontSizeField;
            }
            set {
                this.yTitleFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string YTitleFontFamily {
            get {
                return this.yTitleFontFamilyField;
            }
            set {
                this.yTitleFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public float MinSpaceL {
            get {
                return this.minSpaceLField;
            }
            set {
                this.minSpaceLField = value;
            }
        }
        
        /// <remarks/>
        public float MinSpaceR {
            get {
                return this.minSpaceRField;
            }
            set {
                this.minSpaceRField = value;
            }
        }
        
        /// <remarks/>
        public int SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string XScaleFormat {
            get {
                return this.xScaleFormatField;
            }
            set {
                this.xScaleFormatField = value;
            }
        }
        
        /// <remarks/>
        public string YScaleFormat {
            get {
                return this.yScaleFormatField;
            }
            set {
                this.yScaleFormatField = value;
            }
        }
        
        /// <remarks/>
        public GraphSchemaTagInfo[] TagList {
            get {
                return this.tagListField;
            }
            set {
                this.tagListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GraphSchemaTagInfo {
        
        private int keyIdField;
        
        private int itemIdField;
        
        private string tagIdField;
        
        private string tagNameField;
        
        private string curveTypeField;
        
        private int curveColorField;
        
        private int serialNumberField;
        
        private float lineWidthField;
        
        private string symbolTypeField;
        
        private float symbolSizeField;
        
        private int mAPeriodField;
        
        private byte lineTypeField;
        
        private int symbolColorField;
        
        /// <remarks/>
        public int KeyId {
            get {
                return this.keyIdField;
            }
            set {
                this.keyIdField = value;
            }
        }
        
        /// <remarks/>
        public int ItemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
        
        /// <remarks/>
        public string TagId {
            get {
                return this.tagIdField;
            }
            set {
                this.tagIdField = value;
            }
        }
        
        /// <remarks/>
        public string TagName {
            get {
                return this.tagNameField;
            }
            set {
                this.tagNameField = value;
            }
        }
        
        /// <remarks/>
        public string CurveType {
            get {
                return this.curveTypeField;
            }
            set {
                this.curveTypeField = value;
            }
        }
        
        /// <remarks/>
        public int CurveColor {
            get {
                return this.curveColorField;
            }
            set {
                this.curveColorField = value;
            }
        }
        
        /// <remarks/>
        public int SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public float LineWidth {
            get {
                return this.lineWidthField;
            }
            set {
                this.lineWidthField = value;
            }
        }
        
        /// <remarks/>
        public string SymbolType {
            get {
                return this.symbolTypeField;
            }
            set {
                this.symbolTypeField = value;
            }
        }
        
        /// <remarks/>
        public float SymbolSize {
            get {
                return this.symbolSizeField;
            }
            set {
                this.symbolSizeField = value;
            }
        }
        
        /// <remarks/>
        public int MAPeriod {
            get {
                return this.mAPeriodField;
            }
            set {
                this.mAPeriodField = value;
            }
        }
        
        /// <remarks/>
        public byte LineType {
            get {
                return this.lineTypeField;
            }
            set {
                this.lineTypeField = value;
            }
        }
        
        /// <remarks/>
        public int SymbolColor {
            get {
                return this.symbolColorField;
            }
            set {
                this.symbolColorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GraphSchemaRTagInfo {
        
        private int rTagIdField;
        
        private int tabIdField;
        
        private string tagIdField;
        
        private string tagNameField;
        
        private int serialNumberField;
        
        private string unitField;
        
        private string dataTypeField;
        
        private double tagValueField;
        
        /// <remarks/>
        public int RTagId {
            get {
                return this.rTagIdField;
            }
            set {
                this.rTagIdField = value;
            }
        }
        
        /// <remarks/>
        public int TabId {
            get {
                return this.tabIdField;
            }
            set {
                this.tabIdField = value;
            }
        }
        
        /// <remarks/>
        public string TagId {
            get {
                return this.tagIdField;
            }
            set {
                this.tagIdField = value;
            }
        }
        
        /// <remarks/>
        public string TagName {
            get {
                return this.tagNameField;
            }
            set {
                this.tagNameField = value;
            }
        }
        
        /// <remarks/>
        public int SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public double TagValue {
            get {
                return this.tagValueField;
            }
            set {
                this.tagValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GraphSchemaTabInfo {
        
        private int tabIdField;
        
        private int schemaIdField;
        
        private string tabNameField;
        
        private byte tabTypeField;
        
        private bool tabVisibleField;
        
        private string titleField;
        
        private bool titleVisibleField;
        
        private int serialNumberField;
        
        private GraphSchemaRTagInfo[] rTagListField;
        
        /// <remarks/>
        public int TabId {
            get {
                return this.tabIdField;
            }
            set {
                this.tabIdField = value;
            }
        }
        
        /// <remarks/>
        public int SchemaId {
            get {
                return this.schemaIdField;
            }
            set {
                this.schemaIdField = value;
            }
        }
        
        /// <remarks/>
        public string TabName {
            get {
                return this.tabNameField;
            }
            set {
                this.tabNameField = value;
            }
        }
        
        /// <remarks/>
        public byte TabType {
            get {
                return this.tabTypeField;
            }
            set {
                this.tabTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool TabVisible {
            get {
                return this.tabVisibleField;
            }
            set {
                this.tabVisibleField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public bool TitleVisible {
            get {
                return this.titleVisibleField;
            }
            set {
                this.titleVisibleField = value;
            }
        }
        
        /// <remarks/>
        public int SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public GraphSchemaRTagInfo[] RTagList {
            get {
                return this.rTagListField;
            }
            set {
                this.rTagListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FloatingBlockItemInfo {
        
        private int blockItemIdField;
        
        private int blockIdField;
        
        private string labelField;
        
        private string unitField;
        
        private string tagExpField;
        
        private string dataTypeField;
        
        private int borderColorField;
        
        private float valueFontSizeField;
        
        private string valueFontFamilyField;
        
        private int valueForeColorField;
        
        private float unitFontSizeField;
        
        private string unitFontFamilyField;
        
        private int unitForeColorField;
        
        private int serialNumberField;
        
        /// <remarks/>
        public int BlockItemId {
            get {
                return this.blockItemIdField;
            }
            set {
                this.blockItemIdField = value;
            }
        }
        
        /// <remarks/>
        public int BlockId {
            get {
                return this.blockIdField;
            }
            set {
                this.blockIdField = value;
            }
        }
        
        /// <remarks/>
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public string TagExp {
            get {
                return this.tagExpField;
            }
            set {
                this.tagExpField = value;
            }
        }
        
        /// <remarks/>
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public int BorderColor {
            get {
                return this.borderColorField;
            }
            set {
                this.borderColorField = value;
            }
        }
        
        /// <remarks/>
        public float ValueFontSize {
            get {
                return this.valueFontSizeField;
            }
            set {
                this.valueFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string ValueFontFamily {
            get {
                return this.valueFontFamilyField;
            }
            set {
                this.valueFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public int ValueForeColor {
            get {
                return this.valueForeColorField;
            }
            set {
                this.valueForeColorField = value;
            }
        }
        
        /// <remarks/>
        public float UnitFontSize {
            get {
                return this.unitFontSizeField;
            }
            set {
                this.unitFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string UnitFontFamily {
            get {
                return this.unitFontFamilyField;
            }
            set {
                this.unitFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public int UnitForeColor {
            get {
                return this.unitForeColorField;
            }
            set {
                this.unitForeColorField = value;
            }
        }
        
        /// <remarks/>
        public int SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FloatingBlockInfo {
        
        private int schemaIdField;
        
        private int blockIdField;
        
        private int fillColorField;
        
        private int borderColorField;
        
        private float lableFontSizeField;
        
        private string lableFontFamilyField;
        
        private int lableForeColorField;
        
        private float xField;
        
        private float yField;
        
        private float widthField;
        
        private float heightField;
        
        private bool isAutoSizeField;
        
        private FloatingBlockItemInfo[] itemListField;
        
        private bool isLabelInLineField;
        
        /// <remarks/>
        public int SchemaId {
            get {
                return this.schemaIdField;
            }
            set {
                this.schemaIdField = value;
            }
        }
        
        /// <remarks/>
        public int BlockId {
            get {
                return this.blockIdField;
            }
            set {
                this.blockIdField = value;
            }
        }
        
        /// <remarks/>
        public int FillColor {
            get {
                return this.fillColorField;
            }
            set {
                this.fillColorField = value;
            }
        }
        
        /// <remarks/>
        public int BorderColor {
            get {
                return this.borderColorField;
            }
            set {
                this.borderColorField = value;
            }
        }
        
        /// <remarks/>
        public float LableFontSize {
            get {
                return this.lableFontSizeField;
            }
            set {
                this.lableFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string LableFontFamily {
            get {
                return this.lableFontFamilyField;
            }
            set {
                this.lableFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public int LableForeColor {
            get {
                return this.lableForeColorField;
            }
            set {
                this.lableForeColorField = value;
            }
        }
        
        /// <remarks/>
        public float X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public float Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        public float Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public float Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAutoSize {
            get {
                return this.isAutoSizeField;
            }
            set {
                this.isAutoSizeField = value;
            }
        }
        
        /// <remarks/>
        public FloatingBlockItemInfo[] ItemList {
            get {
                return this.itemListField;
            }
            set {
                this.itemListField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLabelInLine {
            get {
                return this.isLabelInLineField;
            }
            set {
                this.isLabelInLineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetByIdCompletedEventHandler(object sender, GetByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GraphSchemaInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GraphSchemaInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetByNameCompletedEventHandler(object sender, GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GraphSchemaInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GraphSchemaInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllCompletedEventHandler(object sender, GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GraphSchemaInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GraphSchemaInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetByCategoryIdCompletedEventHandler(object sender, GetByCategoryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByCategoryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByCategoryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GraphSchemaInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GraphSchemaInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNoCategorySchemaCompletedEventHandler(object sender, GetNoCategorySchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoCategorySchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNoCategorySchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GraphSchemaInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GraphSchemaInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InsertCompletedEventHandler(object sender, InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateLoginNameCompletedEventHandler(object sender, UpdateLoginNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLoginNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLoginNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeepSaveCompletedEventHandler(object sender, DeepSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeepSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeepSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591