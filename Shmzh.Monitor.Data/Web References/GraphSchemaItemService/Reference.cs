//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace Shmzh.Monitor.Data.GraphSchemaItemService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GraphSchemaItemSoap", Namespace="http://tempuri.org/")]
    public partial class GraphSchemaItem : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBySchemaIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GraphSchemaItem() {
            this.Url = global::Shmzh.Monitor.Data.Properties.Settings.Default.Shmzh_Monitor_Data_GraphSchemaItem_GraphSchemaItem;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllCompletedEventHandler GetAllCompleted;
        
        /// <remarks/>
        public event GetByIdCompletedEventHandler GetByIdCompleted;
        
        /// <remarks/>
        public event GetBySchemaIdCompletedEventHandler GetBySchemaIdCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event InsertCompletedEventHandler InsertCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event MoveCompletedEventHandler MoveCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GraphSchemaItemInfo[] GetAll() {
            object[] results = this.Invoke("GetAll", new object[0]);
            return ((GraphSchemaItemInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAsync() {
            this.GetAllAsync(null);
        }
        
        /// <remarks/>
        public void GetAllAsync(object userState) {
            if ((this.GetAllOperationCompleted == null)) {
                this.GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOperationCompleted);
            }
            this.InvokeAsync("GetAll", new object[0], this.GetAllOperationCompleted, userState);
        }
        
        private void OnGetAllOperationCompleted(object arg) {
            if ((this.GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCompleted(this, new GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GraphSchemaItemInfo GetById(int itemId) {
            object[] results = this.Invoke("GetById", new object[] {
                        itemId});
            return ((GraphSchemaItemInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetByIdAsync(int itemId) {
            this.GetByIdAsync(itemId, null);
        }
        
        /// <remarks/>
        public void GetByIdAsync(int itemId, object userState) {
            if ((this.GetByIdOperationCompleted == null)) {
                this.GetByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByIdOperationCompleted);
            }
            this.InvokeAsync("GetById", new object[] {
                        itemId}, this.GetByIdOperationCompleted, userState);
        }
        
        private void OnGetByIdOperationCompleted(object arg) {
            if ((this.GetByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByIdCompleted(this, new GetByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBySchemaId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GraphSchemaItemInfo[] GetBySchemaId(int schemaId) {
            object[] results = this.Invoke("GetBySchemaId", new object[] {
                        schemaId});
            return ((GraphSchemaItemInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBySchemaIdAsync(int schemaId) {
            this.GetBySchemaIdAsync(schemaId, null);
        }
        
        /// <remarks/>
        public void GetBySchemaIdAsync(int schemaId, object userState) {
            if ((this.GetBySchemaIdOperationCompleted == null)) {
                this.GetBySchemaIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBySchemaIdOperationCompleted);
            }
            this.InvokeAsync("GetBySchemaId", new object[] {
                        schemaId}, this.GetBySchemaIdOperationCompleted, userState);
        }
        
        private void OnGetBySchemaIdOperationCompleted(object arg) {
            if ((this.GetBySchemaIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBySchemaIdCompleted(this, new GetBySchemaIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete(int schemaItemId) {
            object[] results = this.Invoke("Delete", new object[] {
                        schemaItemId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(int schemaItemId) {
            this.DeleteAsync(schemaItemId, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(int schemaItemId, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        schemaItemId}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Insert(GraphSchemaItemInfo itemInfo) {
            object[] results = this.Invoke("Insert", new object[] {
                        itemInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAsync(GraphSchemaItemInfo itemInfo) {
            this.InsertAsync(itemInfo, null);
        }
        
        /// <remarks/>
        public void InsertAsync(GraphSchemaItemInfo itemInfo, object userState) {
            if ((this.InsertOperationCompleted == null)) {
                this.InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOperationCompleted);
            }
            this.InvokeAsync("Insert", new object[] {
                        itemInfo}, this.InsertOperationCompleted, userState);
        }
        
        private void OnInsertOperationCompleted(object arg) {
            if ((this.InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCompleted(this, new InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Update(GraphSchemaItemInfo itemInfo) {
            object[] results = this.Invoke("Update", new object[] {
                        itemInfo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(GraphSchemaItemInfo itemInfo) {
            this.UpdateAsync(itemInfo, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(GraphSchemaItemInfo itemInfo, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        itemInfo}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Move", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Move(int itemId, byte opType) {
            object[] results = this.Invoke("Move", new object[] {
                        itemId,
                        opType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MoveAsync(int itemId, byte opType) {
            this.MoveAsync(itemId, opType, null);
        }
        
        /// <remarks/>
        public void MoveAsync(int itemId, byte opType, object userState) {
            if ((this.MoveOperationCompleted == null)) {
                this.MoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveOperationCompleted);
            }
            this.InvokeAsync("Move", new object[] {
                        itemId,
                        opType}, this.MoveOperationCompleted, userState);
        }
        
        private void OnMoveOperationCompleted(object arg) {
            if ((this.MoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveCompleted(this, new MoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GraphSchemaItemInfo {
        
        private int itemIdField;
        
        private int schemaIdField;
        
        private string titleField;
        
        private bool titleVisibleField;
        
        private float titleFontSizeField;
        
        private string titleFontFamilyField;
        
        private bool legendVisibleField;
        
        private float legendFontSizeField;
        
        private string legendFontFamilyField;
        
        private bool legendIsShowSymbolsField;
        
        private bool legendIsHStackField;
        
        private string legendPositionField;
        
        private string xAxisField;
        
        private bool xScaleVisibleField;
        
        private float xScaleFontSizeField;
        
        private string xScaleFontFamilyField;
        
        private bool xTitleVisibleField;
        
        private float xTitleFontSizeField;
        
        private string xTitleFontFamilyField;
        
        private string yAxisField;
        
        private bool yScaleVisibleField;
        
        private float yScaleFontSizeField;
        
        private string yScaleFontFaminlyField;
        
        private bool yTitleVisibleField;
        
        private float yTitleFontSizeField;
        
        private string yTitleFontFamilyField;
        
        private float minSpaceLField;
        
        private float minSpaceRField;
        
        private int serialNumberField;
        
        private string xScaleFormatField;
        
        private string yScaleFormatField;
        
        private GraphSchemaTagInfo[] tagListField;
        
        /// <remarks/>
        public int ItemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
        
        /// <remarks/>
        public int SchemaId {
            get {
                return this.schemaIdField;
            }
            set {
                this.schemaIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public bool TitleVisible {
            get {
                return this.titleVisibleField;
            }
            set {
                this.titleVisibleField = value;
            }
        }
        
        /// <remarks/>
        public float TitleFontSize {
            get {
                return this.titleFontSizeField;
            }
            set {
                this.titleFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string TitleFontFamily {
            get {
                return this.titleFontFamilyField;
            }
            set {
                this.titleFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public bool LegendVisible {
            get {
                return this.legendVisibleField;
            }
            set {
                this.legendVisibleField = value;
            }
        }
        
        /// <remarks/>
        public float LegendFontSize {
            get {
                return this.legendFontSizeField;
            }
            set {
                this.legendFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string LegendFontFamily {
            get {
                return this.legendFontFamilyField;
            }
            set {
                this.legendFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public bool LegendIsShowSymbols {
            get {
                return this.legendIsShowSymbolsField;
            }
            set {
                this.legendIsShowSymbolsField = value;
            }
        }
        
        /// <remarks/>
        public bool LegendIsHStack {
            get {
                return this.legendIsHStackField;
            }
            set {
                this.legendIsHStackField = value;
            }
        }
        
        /// <remarks/>
        public string LegendPosition {
            get {
                return this.legendPositionField;
            }
            set {
                this.legendPositionField = value;
            }
        }
        
        /// <remarks/>
        public string XAxis {
            get {
                return this.xAxisField;
            }
            set {
                this.xAxisField = value;
            }
        }
        
        /// <remarks/>
        public bool XScaleVisible {
            get {
                return this.xScaleVisibleField;
            }
            set {
                this.xScaleVisibleField = value;
            }
        }
        
        /// <remarks/>
        public float XScaleFontSize {
            get {
                return this.xScaleFontSizeField;
            }
            set {
                this.xScaleFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string XScaleFontFamily {
            get {
                return this.xScaleFontFamilyField;
            }
            set {
                this.xScaleFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public bool XTitleVisible {
            get {
                return this.xTitleVisibleField;
            }
            set {
                this.xTitleVisibleField = value;
            }
        }
        
        /// <remarks/>
        public float XTitleFontSize {
            get {
                return this.xTitleFontSizeField;
            }
            set {
                this.xTitleFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string XTitleFontFamily {
            get {
                return this.xTitleFontFamilyField;
            }
            set {
                this.xTitleFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public string YAxis {
            get {
                return this.yAxisField;
            }
            set {
                this.yAxisField = value;
            }
        }
        
        /// <remarks/>
        public bool YScaleVisible {
            get {
                return this.yScaleVisibleField;
            }
            set {
                this.yScaleVisibleField = value;
            }
        }
        
        /// <remarks/>
        public float YScaleFontSize {
            get {
                return this.yScaleFontSizeField;
            }
            set {
                this.yScaleFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string YScaleFontFaminly {
            get {
                return this.yScaleFontFaminlyField;
            }
            set {
                this.yScaleFontFaminlyField = value;
            }
        }
        
        /// <remarks/>
        public bool YTitleVisible {
            get {
                return this.yTitleVisibleField;
            }
            set {
                this.yTitleVisibleField = value;
            }
        }
        
        /// <remarks/>
        public float YTitleFontSize {
            get {
                return this.yTitleFontSizeField;
            }
            set {
                this.yTitleFontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string YTitleFontFamily {
            get {
                return this.yTitleFontFamilyField;
            }
            set {
                this.yTitleFontFamilyField = value;
            }
        }
        
        /// <remarks/>
        public float MinSpaceL {
            get {
                return this.minSpaceLField;
            }
            set {
                this.minSpaceLField = value;
            }
        }
        
        /// <remarks/>
        public float MinSpaceR {
            get {
                return this.minSpaceRField;
            }
            set {
                this.minSpaceRField = value;
            }
        }
        
        /// <remarks/>
        public int SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string XScaleFormat {
            get {
                return this.xScaleFormatField;
            }
            set {
                this.xScaleFormatField = value;
            }
        }
        
        /// <remarks/>
        public string YScaleFormat {
            get {
                return this.yScaleFormatField;
            }
            set {
                this.yScaleFormatField = value;
            }
        }
        
        /// <remarks/>
        public GraphSchemaTagInfo[] TagList {
            get {
                return this.tagListField;
            }
            set {
                this.tagListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GraphSchemaTagInfo {
        
        private int keyIdField;
        
        private int itemIdField;
        
        private string tagIdField;
        
        private string tagNameField;
        
        private string curveTypeField;
        
        private int curveColorField;
        
        private int serialNumberField;
        
        private float lineWidthField;
        
        private string symbolTypeField;
        
        private float symbolSizeField;
        
        private int mAPeriodField;
        
        private byte lineTypeField;
        
        private int symbolColorField;
        
        /// <remarks/>
        public int KeyId {
            get {
                return this.keyIdField;
            }
            set {
                this.keyIdField = value;
            }
        }
        
        /// <remarks/>
        public int ItemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
        
        /// <remarks/>
        public string TagId {
            get {
                return this.tagIdField;
            }
            set {
                this.tagIdField = value;
            }
        }
        
        /// <remarks/>
        public string TagName {
            get {
                return this.tagNameField;
            }
            set {
                this.tagNameField = value;
            }
        }
        
        /// <remarks/>
        public string CurveType {
            get {
                return this.curveTypeField;
            }
            set {
                this.curveTypeField = value;
            }
        }
        
        /// <remarks/>
        public int CurveColor {
            get {
                return this.curveColorField;
            }
            set {
                this.curveColorField = value;
            }
        }
        
        /// <remarks/>
        public int SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public float LineWidth {
            get {
                return this.lineWidthField;
            }
            set {
                this.lineWidthField = value;
            }
        }
        
        /// <remarks/>
        public string SymbolType {
            get {
                return this.symbolTypeField;
            }
            set {
                this.symbolTypeField = value;
            }
        }
        
        /// <remarks/>
        public float SymbolSize {
            get {
                return this.symbolSizeField;
            }
            set {
                this.symbolSizeField = value;
            }
        }
        
        /// <remarks/>
        public int MAPeriod {
            get {
                return this.mAPeriodField;
            }
            set {
                this.mAPeriodField = value;
            }
        }
        
        /// <remarks/>
        public byte LineType {
            get {
                return this.lineTypeField;
            }
            set {
                this.lineTypeField = value;
            }
        }
        
        /// <remarks/>
        public int SymbolColor {
            get {
                return this.symbolColorField;
            }
            set {
                this.symbolColorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllCompletedEventHandler(object sender, GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GraphSchemaItemInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GraphSchemaItemInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetByIdCompletedEventHandler(object sender, GetByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GraphSchemaItemInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GraphSchemaItemInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBySchemaIdCompletedEventHandler(object sender, GetBySchemaIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBySchemaIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBySchemaIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GraphSchemaItemInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GraphSchemaItemInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InsertCompletedEventHandler(object sender, InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void MoveCompletedEventHandler(object sender, MoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591