//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace Shmzh.Gather.Data.CSchemaService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CSchemaServiceSoap", Namespace="http://www.ypwater.com/WQService/")]
    public partial class CSchemaService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetConnectionStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportSchemaXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZipedReportSchemaXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportSchemaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZipedReportSchemaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReportSchemaData1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReportSchemaZipedData1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReportSchemaZipedDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReportSchemaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SureReportSchemaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelReportSchemaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddReportSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddZipedReportSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReportSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateZipedReportSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastOperateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationByReportCodeAndCycleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationByCategoryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationBySchemaIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchemaByIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CSchemaService() {
            this.Url = global::Shmzh.Gather.Data.Properties.Settings.Default.Shmzh_Gather_Data_CSchemaService_CSchemaService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetConnectionStringCompletedEventHandler GetConnectionStringCompleted;
        
        /// <remarks/>
        public event GetReportSchemaXMLCompletedEventHandler GetReportSchemaXMLCompleted;
        
        /// <remarks/>
        public event GetZipedReportSchemaXMLCompletedEventHandler GetZipedReportSchemaXMLCompleted;
        
        /// <remarks/>
        public event GetReportSchemaDataCompletedEventHandler GetReportSchemaDataCompleted;
        
        /// <remarks/>
        public event GetZipedReportSchemaDataCompletedEventHandler GetZipedReportSchemaDataCompleted;
        
        /// <remarks/>
        public event SaveReportSchemaData1CompletedEventHandler SaveReportSchemaData1Completed;
        
        /// <remarks/>
        public event SaveReportSchemaZipedData1CompletedEventHandler SaveReportSchemaZipedData1Completed;
        
        /// <remarks/>
        public event SaveReportSchemaZipedDataCompletedEventHandler SaveReportSchemaZipedDataCompleted;
        
        /// <remarks/>
        public event SaveReportSchemaDataCompletedEventHandler SaveReportSchemaDataCompleted;
        
        /// <remarks/>
        public event SureReportSchemaDataCompletedEventHandler SureReportSchemaDataCompleted;
        
        /// <remarks/>
        public event CancelReportSchemaDataCompletedEventHandler CancelReportSchemaDataCompleted;
        
        /// <remarks/>
        public event AddReportSchemaCompletedEventHandler AddReportSchemaCompleted;
        
        /// <remarks/>
        public event AddZipedReportSchemaCompletedEventHandler AddZipedReportSchemaCompleted;
        
        /// <remarks/>
        public event UpdateReportSchemaCompletedEventHandler UpdateReportSchemaCompleted;
        
        /// <remarks/>
        public event UpdateZipedReportSchemaCompletedEventHandler UpdateZipedReportSchemaCompleted;
        
        /// <remarks/>
        public event AddOperateInfoCompletedEventHandler AddOperateInfoCompleted;
        
        /// <remarks/>
        public event AddOperationInfoCompletedEventHandler AddOperationInfoCompleted;
        
        /// <remarks/>
        public event GetLastOperateCompletedEventHandler GetLastOperateCompleted;
        
        /// <remarks/>
        public event GetOperationInfoCompletedEventHandler GetOperationInfoCompleted;
        
        /// <remarks/>
        public event GetOperationByReportCodeAndCycleIdCompletedEventHandler GetOperationByReportCodeAndCycleIdCompleted;
        
        /// <remarks/>
        public event GetOperationByIdCompletedEventHandler GetOperationByIdCompleted;
        
        /// <remarks/>
        public event GetLatestOperationCompletedEventHandler GetLatestOperationCompleted;
        
        /// <remarks/>
        public event InsertCategoryCompletedEventHandler InsertCategoryCompleted;
        
        /// <remarks/>
        public event UpdateCategoryCompletedEventHandler UpdateCategoryCompleted;
        
        /// <remarks/>
        public event DeleteCategoryCompletedEventHandler DeleteCategoryCompleted;
        
        /// <remarks/>
        public event GetAllCategoryCompletedEventHandler GetAllCategoryCompleted;
        
        /// <remarks/>
        public event GetCategoryByIdCompletedEventHandler GetCategoryByIdCompleted;
        
        /// <remarks/>
        public event InsertRelationCompletedEventHandler InsertRelationCompleted;
        
        /// <remarks/>
        public event UpdateRelationCompletedEventHandler UpdateRelationCompleted;
        
        /// <remarks/>
        public event DeleteRelationCompletedEventHandler DeleteRelationCompleted;
        
        /// <remarks/>
        public event GetAllRelationCompletedEventHandler GetAllRelationCompleted;
        
        /// <remarks/>
        public event GetRelationByCategoryIdCompletedEventHandler GetRelationByCategoryIdCompleted;
        
        /// <remarks/>
        public event GetRelationBySchemaIdCompletedEventHandler GetRelationBySchemaIdCompleted;
        
        /// <remarks/>
        public event GetRelationByIdCompletedEventHandler GetRelationByIdCompleted;
        
        /// <remarks/>
        public event InsertSchemaCompletedEventHandler InsertSchemaCompleted;
        
        /// <remarks/>
        public event UpdateSchemaCompletedEventHandler UpdateSchemaCompleted;
        
        /// <remarks/>
        public event DeleteSchemaCompletedEventHandler DeleteSchemaCompleted;
        
        /// <remarks/>
        public event GetAllSchemaCompletedEventHandler GetAllSchemaCompleted;
        
        /// <remarks/>
        public event GetSchemaByIdCompletedEventHandler GetSchemaByIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetConnectionString", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConnectionString() {
            object[] results = this.Invoke("GetConnectionString", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectionStringAsync() {
            this.GetConnectionStringAsync(null);
        }
        
        /// <remarks/>
        public void GetConnectionStringAsync(object userState) {
            if ((this.GetConnectionStringOperationCompleted == null)) {
                this.GetConnectionStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionStringOperationCompleted);
            }
            this.InvokeAsync("GetConnectionString", new object[0], this.GetConnectionStringOperationCompleted, userState);
        }
        
        private void OnGetConnectionStringOperationCompleted(object arg) {
            if ((this.GetConnectionStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionStringCompleted(this, new GetConnectionStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetReportSchemaXML", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReportSchemaXML(string reprotCode) {
            object[] results = this.Invoke("GetReportSchemaXML", new object[] {
                        reprotCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportSchemaXMLAsync(string reprotCode) {
            this.GetReportSchemaXMLAsync(reprotCode, null);
        }
        
        /// <remarks/>
        public void GetReportSchemaXMLAsync(string reprotCode, object userState) {
            if ((this.GetReportSchemaXMLOperationCompleted == null)) {
                this.GetReportSchemaXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportSchemaXMLOperationCompleted);
            }
            this.InvokeAsync("GetReportSchemaXML", new object[] {
                        reprotCode}, this.GetReportSchemaXMLOperationCompleted, userState);
        }
        
        private void OnGetReportSchemaXMLOperationCompleted(object arg) {
            if ((this.GetReportSchemaXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportSchemaXMLCompleted(this, new GetReportSchemaXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetZipedReportSchemaXML", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetZipedReportSchemaXML(string reportCode) {
            object[] results = this.Invoke("GetZipedReportSchemaXML", new object[] {
                        reportCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetZipedReportSchemaXMLAsync(string reportCode) {
            this.GetZipedReportSchemaXMLAsync(reportCode, null);
        }
        
        /// <remarks/>
        public void GetZipedReportSchemaXMLAsync(string reportCode, object userState) {
            if ((this.GetZipedReportSchemaXMLOperationCompleted == null)) {
                this.GetZipedReportSchemaXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZipedReportSchemaXMLOperationCompleted);
            }
            this.InvokeAsync("GetZipedReportSchemaXML", new object[] {
                        reportCode}, this.GetZipedReportSchemaXMLOperationCompleted, userState);
        }
        
        private void OnGetZipedReportSchemaXMLOperationCompleted(object arg) {
            if ((this.GetZipedReportSchemaXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZipedReportSchemaXMLCompleted(this, new GetZipedReportSchemaXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetReportSchemaData", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReportSchemaData(string reportCode, System.DateTime currentDate, bool canModify) {
            object[] results = this.Invoke("GetReportSchemaData", new object[] {
                        reportCode,
                        currentDate,
                        canModify});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportSchemaDataAsync(string reportCode, System.DateTime currentDate, bool canModify) {
            this.GetReportSchemaDataAsync(reportCode, currentDate, canModify, null);
        }
        
        /// <remarks/>
        public void GetReportSchemaDataAsync(string reportCode, System.DateTime currentDate, bool canModify, object userState) {
            if ((this.GetReportSchemaDataOperationCompleted == null)) {
                this.GetReportSchemaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportSchemaDataOperationCompleted);
            }
            this.InvokeAsync("GetReportSchemaData", new object[] {
                        reportCode,
                        currentDate,
                        canModify}, this.GetReportSchemaDataOperationCompleted, userState);
        }
        
        private void OnGetReportSchemaDataOperationCompleted(object arg) {
            if ((this.GetReportSchemaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportSchemaDataCompleted(this, new GetReportSchemaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetZipedReportSchemaData", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetZipedReportSchemaData(string reportCode, System.DateTime currentDate, bool canModify) {
            object[] results = this.Invoke("GetZipedReportSchemaData", new object[] {
                        reportCode,
                        currentDate,
                        canModify});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetZipedReportSchemaDataAsync(string reportCode, System.DateTime currentDate, bool canModify) {
            this.GetZipedReportSchemaDataAsync(reportCode, currentDate, canModify, null);
        }
        
        /// <remarks/>
        public void GetZipedReportSchemaDataAsync(string reportCode, System.DateTime currentDate, bool canModify, object userState) {
            if ((this.GetZipedReportSchemaDataOperationCompleted == null)) {
                this.GetZipedReportSchemaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZipedReportSchemaDataOperationCompleted);
            }
            this.InvokeAsync("GetZipedReportSchemaData", new object[] {
                        reportCode,
                        currentDate,
                        canModify}, this.GetZipedReportSchemaDataOperationCompleted, userState);
        }
        
        private void OnGetZipedReportSchemaDataOperationCompleted(object arg) {
            if ((this.GetZipedReportSchemaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZipedReportSchemaDataCompleted(this, new GetZipedReportSchemaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/SaveReportSchemaData1", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveReportSchemaData1(string reportCode, System.DateTime currentDate, string newXMLData, string oldXMLData) {
            object[] results = this.Invoke("SaveReportSchemaData1", new object[] {
                        reportCode,
                        currentDate,
                        newXMLData,
                        oldXMLData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReportSchemaData1Async(string reportCode, System.DateTime currentDate, string newXMLData, string oldXMLData) {
            this.SaveReportSchemaData1Async(reportCode, currentDate, newXMLData, oldXMLData, null);
        }
        
        /// <remarks/>
        public void SaveReportSchemaData1Async(string reportCode, System.DateTime currentDate, string newXMLData, string oldXMLData, object userState) {
            if ((this.SaveReportSchemaData1OperationCompleted == null)) {
                this.SaveReportSchemaData1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReportSchemaData1OperationCompleted);
            }
            this.InvokeAsync("SaveReportSchemaData1", new object[] {
                        reportCode,
                        currentDate,
                        newXMLData,
                        oldXMLData}, this.SaveReportSchemaData1OperationCompleted, userState);
        }
        
        private void OnSaveReportSchemaData1OperationCompleted(object arg) {
            if ((this.SaveReportSchemaData1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReportSchemaData1Completed(this, new SaveReportSchemaData1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/SaveReportSchemaZipedData1", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveReportSchemaZipedData1(string reportCode, System.DateTime currentDate, string newZipedData, string oldZipedData) {
            object[] results = this.Invoke("SaveReportSchemaZipedData1", new object[] {
                        reportCode,
                        currentDate,
                        newZipedData,
                        oldZipedData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReportSchemaZipedData1Async(string reportCode, System.DateTime currentDate, string newZipedData, string oldZipedData) {
            this.SaveReportSchemaZipedData1Async(reportCode, currentDate, newZipedData, oldZipedData, null);
        }
        
        /// <remarks/>
        public void SaveReportSchemaZipedData1Async(string reportCode, System.DateTime currentDate, string newZipedData, string oldZipedData, object userState) {
            if ((this.SaveReportSchemaZipedData1OperationCompleted == null)) {
                this.SaveReportSchemaZipedData1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReportSchemaZipedData1OperationCompleted);
            }
            this.InvokeAsync("SaveReportSchemaZipedData1", new object[] {
                        reportCode,
                        currentDate,
                        newZipedData,
                        oldZipedData}, this.SaveReportSchemaZipedData1OperationCompleted, userState);
        }
        
        private void OnSaveReportSchemaZipedData1OperationCompleted(object arg) {
            if ((this.SaveReportSchemaZipedData1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReportSchemaZipedData1Completed(this, new SaveReportSchemaZipedData1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/SaveReportSchemaZipedData", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveReportSchemaZipedData(string reportCode, System.DateTime currentDate, string newZipedXMLData, string oldZipedXMLData, string userCode, string userName, string userIP) {
            object[] results = this.Invoke("SaveReportSchemaZipedData", new object[] {
                        reportCode,
                        currentDate,
                        newZipedXMLData,
                        oldZipedXMLData,
                        userCode,
                        userName,
                        userIP});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReportSchemaZipedDataAsync(string reportCode, System.DateTime currentDate, string newZipedXMLData, string oldZipedXMLData, string userCode, string userName, string userIP) {
            this.SaveReportSchemaZipedDataAsync(reportCode, currentDate, newZipedXMLData, oldZipedXMLData, userCode, userName, userIP, null);
        }
        
        /// <remarks/>
        public void SaveReportSchemaZipedDataAsync(string reportCode, System.DateTime currentDate, string newZipedXMLData, string oldZipedXMLData, string userCode, string userName, string userIP, object userState) {
            if ((this.SaveReportSchemaZipedDataOperationCompleted == null)) {
                this.SaveReportSchemaZipedDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReportSchemaZipedDataOperationCompleted);
            }
            this.InvokeAsync("SaveReportSchemaZipedData", new object[] {
                        reportCode,
                        currentDate,
                        newZipedXMLData,
                        oldZipedXMLData,
                        userCode,
                        userName,
                        userIP}, this.SaveReportSchemaZipedDataOperationCompleted, userState);
        }
        
        private void OnSaveReportSchemaZipedDataOperationCompleted(object arg) {
            if ((this.SaveReportSchemaZipedDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReportSchemaZipedDataCompleted(this, new SaveReportSchemaZipedDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/SaveReportSchemaData", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveReportSchemaData(string reportCode, System.DateTime currentDate, string newXMLData, string oldXMLData, string userCode, string userName, string userIP) {
            object[] results = this.Invoke("SaveReportSchemaData", new object[] {
                        reportCode,
                        currentDate,
                        newXMLData,
                        oldXMLData,
                        userCode,
                        userName,
                        userIP});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReportSchemaDataAsync(string reportCode, System.DateTime currentDate, string newXMLData, string oldXMLData, string userCode, string userName, string userIP) {
            this.SaveReportSchemaDataAsync(reportCode, currentDate, newXMLData, oldXMLData, userCode, userName, userIP, null);
        }
        
        /// <remarks/>
        public void SaveReportSchemaDataAsync(string reportCode, System.DateTime currentDate, string newXMLData, string oldXMLData, string userCode, string userName, string userIP, object userState) {
            if ((this.SaveReportSchemaDataOperationCompleted == null)) {
                this.SaveReportSchemaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReportSchemaDataOperationCompleted);
            }
            this.InvokeAsync("SaveReportSchemaData", new object[] {
                        reportCode,
                        currentDate,
                        newXMLData,
                        oldXMLData,
                        userCode,
                        userName,
                        userIP}, this.SaveReportSchemaDataOperationCompleted, userState);
        }
        
        private void OnSaveReportSchemaDataOperationCompleted(object arg) {
            if ((this.SaveReportSchemaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReportSchemaDataCompleted(this, new SaveReportSchemaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/SureReportSchemaData", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SureReportSchemaData(string operateCode, string operateName, string operateIP, string reportCode, System.DateTime aDate) {
            object[] results = this.Invoke("SureReportSchemaData", new object[] {
                        operateCode,
                        operateName,
                        operateIP,
                        reportCode,
                        aDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SureReportSchemaDataAsync(string operateCode, string operateName, string operateIP, string reportCode, System.DateTime aDate) {
            this.SureReportSchemaDataAsync(operateCode, operateName, operateIP, reportCode, aDate, null);
        }
        
        /// <remarks/>
        public void SureReportSchemaDataAsync(string operateCode, string operateName, string operateIP, string reportCode, System.DateTime aDate, object userState) {
            if ((this.SureReportSchemaDataOperationCompleted == null)) {
                this.SureReportSchemaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSureReportSchemaDataOperationCompleted);
            }
            this.InvokeAsync("SureReportSchemaData", new object[] {
                        operateCode,
                        operateName,
                        operateIP,
                        reportCode,
                        aDate}, this.SureReportSchemaDataOperationCompleted, userState);
        }
        
        private void OnSureReportSchemaDataOperationCompleted(object arg) {
            if ((this.SureReportSchemaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SureReportSchemaDataCompleted(this, new SureReportSchemaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/CancelReportSchemaData", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CancelReportSchemaData(string operateCode, string operateName, string operateIP, string reportCode, System.DateTime aDate) {
            object[] results = this.Invoke("CancelReportSchemaData", new object[] {
                        operateCode,
                        operateName,
                        operateIP,
                        reportCode,
                        aDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelReportSchemaDataAsync(string operateCode, string operateName, string operateIP, string reportCode, System.DateTime aDate) {
            this.CancelReportSchemaDataAsync(operateCode, operateName, operateIP, reportCode, aDate, null);
        }
        
        /// <remarks/>
        public void CancelReportSchemaDataAsync(string operateCode, string operateName, string operateIP, string reportCode, System.DateTime aDate, object userState) {
            if ((this.CancelReportSchemaDataOperationCompleted == null)) {
                this.CancelReportSchemaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelReportSchemaDataOperationCompleted);
            }
            this.InvokeAsync("CancelReportSchemaData", new object[] {
                        operateCode,
                        operateName,
                        operateIP,
                        reportCode,
                        aDate}, this.CancelReportSchemaDataOperationCompleted, userState);
        }
        
        private void OnCancelReportSchemaDataOperationCompleted(object arg) {
            if ((this.CancelReportSchemaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelReportSchemaDataCompleted(this, new CancelReportSchemaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/AddReportSchema", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddReportSchema(string schemaID, string schemaName, string schemaType, string schemaXML, string cycleType) {
            object[] results = this.Invoke("AddReportSchema", new object[] {
                        schemaID,
                        schemaName,
                        schemaType,
                        schemaXML,
                        cycleType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddReportSchemaAsync(string schemaID, string schemaName, string schemaType, string schemaXML, string cycleType) {
            this.AddReportSchemaAsync(schemaID, schemaName, schemaType, schemaXML, cycleType, null);
        }
        
        /// <remarks/>
        public void AddReportSchemaAsync(string schemaID, string schemaName, string schemaType, string schemaXML, string cycleType, object userState) {
            if ((this.AddReportSchemaOperationCompleted == null)) {
                this.AddReportSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddReportSchemaOperationCompleted);
            }
            this.InvokeAsync("AddReportSchema", new object[] {
                        schemaID,
                        schemaName,
                        schemaType,
                        schemaXML,
                        cycleType}, this.AddReportSchemaOperationCompleted, userState);
        }
        
        private void OnAddReportSchemaOperationCompleted(object arg) {
            if ((this.AddReportSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddReportSchemaCompleted(this, new AddReportSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/AddZipedReportSchema", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddZipedReportSchema(string schemaID, string schemaName, string schemaType, string zipedSchemaXML, string cycleType) {
            object[] results = this.Invoke("AddZipedReportSchema", new object[] {
                        schemaID,
                        schemaName,
                        schemaType,
                        zipedSchemaXML,
                        cycleType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddZipedReportSchemaAsync(string schemaID, string schemaName, string schemaType, string zipedSchemaXML, string cycleType) {
            this.AddZipedReportSchemaAsync(schemaID, schemaName, schemaType, zipedSchemaXML, cycleType, null);
        }
        
        /// <remarks/>
        public void AddZipedReportSchemaAsync(string schemaID, string schemaName, string schemaType, string zipedSchemaXML, string cycleType, object userState) {
            if ((this.AddZipedReportSchemaOperationCompleted == null)) {
                this.AddZipedReportSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddZipedReportSchemaOperationCompleted);
            }
            this.InvokeAsync("AddZipedReportSchema", new object[] {
                        schemaID,
                        schemaName,
                        schemaType,
                        zipedSchemaXML,
                        cycleType}, this.AddZipedReportSchemaOperationCompleted, userState);
        }
        
        private void OnAddZipedReportSchemaOperationCompleted(object arg) {
            if ((this.AddZipedReportSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddZipedReportSchemaCompleted(this, new AddZipedReportSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/UpdateReportSchema", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateReportSchema(string schemaID, string schemaName, string schemaType, string schemaXML, string cycleType) {
            object[] results = this.Invoke("UpdateReportSchema", new object[] {
                        schemaID,
                        schemaName,
                        schemaType,
                        schemaXML,
                        cycleType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateReportSchemaAsync(string schemaID, string schemaName, string schemaType, string schemaXML, string cycleType) {
            this.UpdateReportSchemaAsync(schemaID, schemaName, schemaType, schemaXML, cycleType, null);
        }
        
        /// <remarks/>
        public void UpdateReportSchemaAsync(string schemaID, string schemaName, string schemaType, string schemaXML, string cycleType, object userState) {
            if ((this.UpdateReportSchemaOperationCompleted == null)) {
                this.UpdateReportSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReportSchemaOperationCompleted);
            }
            this.InvokeAsync("UpdateReportSchema", new object[] {
                        schemaID,
                        schemaName,
                        schemaType,
                        schemaXML,
                        cycleType}, this.UpdateReportSchemaOperationCompleted, userState);
        }
        
        private void OnUpdateReportSchemaOperationCompleted(object arg) {
            if ((this.UpdateReportSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReportSchemaCompleted(this, new UpdateReportSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/UpdateZipedReportSchema", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateZipedReportSchema(string schemaID, string schemaName, string schemaType, string zipedSchemaXML, string cycleType) {
            object[] results = this.Invoke("UpdateZipedReportSchema", new object[] {
                        schemaID,
                        schemaName,
                        schemaType,
                        zipedSchemaXML,
                        cycleType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateZipedReportSchemaAsync(string schemaID, string schemaName, string schemaType, string zipedSchemaXML, string cycleType) {
            this.UpdateZipedReportSchemaAsync(schemaID, schemaName, schemaType, zipedSchemaXML, cycleType, null);
        }
        
        /// <remarks/>
        public void UpdateZipedReportSchemaAsync(string schemaID, string schemaName, string schemaType, string zipedSchemaXML, string cycleType, object userState) {
            if ((this.UpdateZipedReportSchemaOperationCompleted == null)) {
                this.UpdateZipedReportSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateZipedReportSchemaOperationCompleted);
            }
            this.InvokeAsync("UpdateZipedReportSchema", new object[] {
                        schemaID,
                        schemaName,
                        schemaType,
                        zipedSchemaXML,
                        cycleType}, this.UpdateZipedReportSchemaOperationCompleted, userState);
        }
        
        private void OnUpdateZipedReportSchemaOperationCompleted(object arg) {
            if ((this.UpdateZipedReportSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateZipedReportSchemaCompleted(this, new UpdateZipedReportSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/AddOperateInfo", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddOperateInfo(string operateCode, string operateName, string operateIP, string reportCode, short operateType, System.DateTime aDate, string modifyInfo, string oldXML) {
            object[] results = this.Invoke("AddOperateInfo", new object[] {
                        operateCode,
                        operateName,
                        operateIP,
                        reportCode,
                        operateType,
                        aDate,
                        modifyInfo,
                        oldXML});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddOperateInfoAsync(string operateCode, string operateName, string operateIP, string reportCode, short operateType, System.DateTime aDate, string modifyInfo, string oldXML) {
            this.AddOperateInfoAsync(operateCode, operateName, operateIP, reportCode, operateType, aDate, modifyInfo, oldXML, null);
        }
        
        /// <remarks/>
        public void AddOperateInfoAsync(string operateCode, string operateName, string operateIP, string reportCode, short operateType, System.DateTime aDate, string modifyInfo, string oldXML, object userState) {
            if ((this.AddOperateInfoOperationCompleted == null)) {
                this.AddOperateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperateInfoOperationCompleted);
            }
            this.InvokeAsync("AddOperateInfo", new object[] {
                        operateCode,
                        operateName,
                        operateIP,
                        reportCode,
                        operateType,
                        aDate,
                        modifyInfo,
                        oldXML}, this.AddOperateInfoOperationCompleted, userState);
        }
        
        private void OnAddOperateInfoOperationCompleted(object arg) {
            if ((this.AddOperateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOperateInfoCompleted(this, new AddOperateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/AddOperationInfo", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddOperationInfo(OperationInfo obj) {
            object[] results = this.Invoke("AddOperationInfo", new object[] {
                        obj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddOperationInfoAsync(OperationInfo obj) {
            this.AddOperationInfoAsync(obj, null);
        }
        
        /// <remarks/>
        public void AddOperationInfoAsync(OperationInfo obj, object userState) {
            if ((this.AddOperationInfoOperationCompleted == null)) {
                this.AddOperationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperationInfoOperationCompleted);
            }
            this.InvokeAsync("AddOperationInfo", new object[] {
                        obj}, this.AddOperationInfoOperationCompleted, userState);
        }
        
        private void OnAddOperationInfoOperationCompleted(object arg) {
            if ((this.AddOperationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOperationInfoCompleted(this, new AddOperationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetLastOperate", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public short GetLastOperate(string reportCode, System.DateTime aDate) {
            object[] results = this.Invoke("GetLastOperate", new object[] {
                        reportCode,
                        aDate});
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastOperateAsync(string reportCode, System.DateTime aDate) {
            this.GetLastOperateAsync(reportCode, aDate, null);
        }
        
        /// <remarks/>
        public void GetLastOperateAsync(string reportCode, System.DateTime aDate, object userState) {
            if ((this.GetLastOperateOperationCompleted == null)) {
                this.GetLastOperateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastOperateOperationCompleted);
            }
            this.InvokeAsync("GetLastOperate", new object[] {
                        reportCode,
                        aDate}, this.GetLastOperateOperationCompleted, userState);
        }
        
        private void OnGetLastOperateOperationCompleted(object arg) {
            if ((this.GetLastOperateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastOperateCompleted(this, new GetLastOperateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetOperationInfo", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OperationInfo[] GetOperationInfo(string reportCode, System.DateTime aDate) {
            object[] results = this.Invoke("GetOperationInfo", new object[] {
                        reportCode,
                        aDate});
            return ((OperationInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationInfoAsync(string reportCode, System.DateTime aDate) {
            this.GetOperationInfoAsync(reportCode, aDate, null);
        }
        
        /// <remarks/>
        public void GetOperationInfoAsync(string reportCode, System.DateTime aDate, object userState) {
            if ((this.GetOperationInfoOperationCompleted == null)) {
                this.GetOperationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationInfoOperationCompleted);
            }
            this.InvokeAsync("GetOperationInfo", new object[] {
                        reportCode,
                        aDate}, this.GetOperationInfoOperationCompleted, userState);
        }
        
        private void OnGetOperationInfoOperationCompleted(object arg) {
            if ((this.GetOperationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationInfoCompleted(this, new GetOperationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetOperationByReportCodeAndCycleId", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OperationInfo[] GetOperationByReportCodeAndCycleId(string reportCode, int cycleId) {
            object[] results = this.Invoke("GetOperationByReportCodeAndCycleId", new object[] {
                        reportCode,
                        cycleId});
            return ((OperationInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationByReportCodeAndCycleIdAsync(string reportCode, int cycleId) {
            this.GetOperationByReportCodeAndCycleIdAsync(reportCode, cycleId, null);
        }
        
        /// <remarks/>
        public void GetOperationByReportCodeAndCycleIdAsync(string reportCode, int cycleId, object userState) {
            if ((this.GetOperationByReportCodeAndCycleIdOperationCompleted == null)) {
                this.GetOperationByReportCodeAndCycleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationByReportCodeAndCycleIdOperationCompleted);
            }
            this.InvokeAsync("GetOperationByReportCodeAndCycleId", new object[] {
                        reportCode,
                        cycleId}, this.GetOperationByReportCodeAndCycleIdOperationCompleted, userState);
        }
        
        private void OnGetOperationByReportCodeAndCycleIdOperationCompleted(object arg) {
            if ((this.GetOperationByReportCodeAndCycleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationByReportCodeAndCycleIdCompleted(this, new GetOperationByReportCodeAndCycleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetOperationById", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OperationInfo GetOperationById(int id) {
            object[] results = this.Invoke("GetOperationById", new object[] {
                        id});
            return ((OperationInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationByIdAsync(int id) {
            this.GetOperationByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetOperationByIdAsync(int id, object userState) {
            if ((this.GetOperationByIdOperationCompleted == null)) {
                this.GetOperationByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationByIdOperationCompleted);
            }
            this.InvokeAsync("GetOperationById", new object[] {
                        id}, this.GetOperationByIdOperationCompleted, userState);
        }
        
        private void OnGetOperationByIdOperationCompleted(object arg) {
            if ((this.GetOperationByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationByIdCompleted(this, new GetOperationByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetLatestOperation", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OperationInfo GetLatestOperation(string reportCode, int cycleId) {
            object[] results = this.Invoke("GetLatestOperation", new object[] {
                        reportCode,
                        cycleId});
            return ((OperationInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestOperationAsync(string reportCode, int cycleId) {
            this.GetLatestOperationAsync(reportCode, cycleId, null);
        }
        
        /// <remarks/>
        public void GetLatestOperationAsync(string reportCode, int cycleId, object userState) {
            if ((this.GetLatestOperationOperationCompleted == null)) {
                this.GetLatestOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestOperationOperationCompleted);
            }
            this.InvokeAsync("GetLatestOperation", new object[] {
                        reportCode,
                        cycleId}, this.GetLatestOperationOperationCompleted, userState);
        }
        
        private void OnGetLatestOperationOperationCompleted(object arg) {
            if ((this.GetLatestOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestOperationCompleted(this, new GetLatestOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/InsertCategory", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertCategory(CategoryInfo obj) {
            object[] results = this.Invoke("InsertCategory", new object[] {
                        obj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCategoryAsync(CategoryInfo obj) {
            this.InsertCategoryAsync(obj, null);
        }
        
        /// <remarks/>
        public void InsertCategoryAsync(CategoryInfo obj, object userState) {
            if ((this.InsertCategoryOperationCompleted == null)) {
                this.InsertCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCategoryOperationCompleted);
            }
            this.InvokeAsync("InsertCategory", new object[] {
                        obj}, this.InsertCategoryOperationCompleted, userState);
        }
        
        private void OnInsertCategoryOperationCompleted(object arg) {
            if ((this.InsertCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCategoryCompleted(this, new InsertCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/UpdateCategory", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCategory(CategoryInfo obj) {
            object[] results = this.Invoke("UpdateCategory", new object[] {
                        obj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCategoryAsync(CategoryInfo obj) {
            this.UpdateCategoryAsync(obj, null);
        }
        
        /// <remarks/>
        public void UpdateCategoryAsync(CategoryInfo obj, object userState) {
            if ((this.UpdateCategoryOperationCompleted == null)) {
                this.UpdateCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCategoryOperationCompleted);
            }
            this.InvokeAsync("UpdateCategory", new object[] {
                        obj}, this.UpdateCategoryOperationCompleted, userState);
        }
        
        private void OnUpdateCategoryOperationCompleted(object arg) {
            if ((this.UpdateCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCategoryCompleted(this, new UpdateCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/DeleteCategory", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteCategory(int id) {
            object[] results = this.Invoke("DeleteCategory", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCategoryAsync(int id) {
            this.DeleteCategoryAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteCategoryAsync(int id, object userState) {
            if ((this.DeleteCategoryOperationCompleted == null)) {
                this.DeleteCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCategoryOperationCompleted);
            }
            this.InvokeAsync("DeleteCategory", new object[] {
                        id}, this.DeleteCategoryOperationCompleted, userState);
        }
        
        private void OnDeleteCategoryOperationCompleted(object arg) {
            if ((this.DeleteCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCategoryCompleted(this, new DeleteCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetAllCategory", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CategoryInfo[] GetAllCategory() {
            object[] results = this.Invoke("GetAllCategory", new object[0]);
            return ((CategoryInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCategoryAsync() {
            this.GetAllCategoryAsync(null);
        }
        
        /// <remarks/>
        public void GetAllCategoryAsync(object userState) {
            if ((this.GetAllCategoryOperationCompleted == null)) {
                this.GetAllCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCategoryOperationCompleted);
            }
            this.InvokeAsync("GetAllCategory", new object[0], this.GetAllCategoryOperationCompleted, userState);
        }
        
        private void OnGetAllCategoryOperationCompleted(object arg) {
            if ((this.GetAllCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCategoryCompleted(this, new GetAllCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetCategoryById", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CategoryInfo GetCategoryById(int id) {
            object[] results = this.Invoke("GetCategoryById", new object[] {
                        id});
            return ((CategoryInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryByIdAsync(int id) {
            this.GetCategoryByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetCategoryByIdAsync(int id, object userState) {
            if ((this.GetCategoryByIdOperationCompleted == null)) {
                this.GetCategoryByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryByIdOperationCompleted);
            }
            this.InvokeAsync("GetCategoryById", new object[] {
                        id}, this.GetCategoryByIdOperationCompleted, userState);
        }
        
        private void OnGetCategoryByIdOperationCompleted(object arg) {
            if ((this.GetCategoryByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryByIdCompleted(this, new GetCategoryByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/InsertRelation", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertRelation(RelationInfo obj) {
            object[] results = this.Invoke("InsertRelation", new object[] {
                        obj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRelationAsync(RelationInfo obj) {
            this.InsertRelationAsync(obj, null);
        }
        
        /// <remarks/>
        public void InsertRelationAsync(RelationInfo obj, object userState) {
            if ((this.InsertRelationOperationCompleted == null)) {
                this.InsertRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRelationOperationCompleted);
            }
            this.InvokeAsync("InsertRelation", new object[] {
                        obj}, this.InsertRelationOperationCompleted, userState);
        }
        
        private void OnInsertRelationOperationCompleted(object arg) {
            if ((this.InsertRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRelationCompleted(this, new InsertRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/UpdateRelation", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateRelation(RelationInfo obj) {
            object[] results = this.Invoke("UpdateRelation", new object[] {
                        obj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRelationAsync(RelationInfo obj) {
            this.UpdateRelationAsync(obj, null);
        }
        
        /// <remarks/>
        public void UpdateRelationAsync(RelationInfo obj, object userState) {
            if ((this.UpdateRelationOperationCompleted == null)) {
                this.UpdateRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRelationOperationCompleted);
            }
            this.InvokeAsync("UpdateRelation", new object[] {
                        obj}, this.UpdateRelationOperationCompleted, userState);
        }
        
        private void OnUpdateRelationOperationCompleted(object arg) {
            if ((this.UpdateRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRelationCompleted(this, new UpdateRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/DeleteRelation", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteRelation(int id) {
            object[] results = this.Invoke("DeleteRelation", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRelationAsync(int id) {
            this.DeleteRelationAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteRelationAsync(int id, object userState) {
            if ((this.DeleteRelationOperationCompleted == null)) {
                this.DeleteRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRelationOperationCompleted);
            }
            this.InvokeAsync("DeleteRelation", new object[] {
                        id}, this.DeleteRelationOperationCompleted, userState);
        }
        
        private void OnDeleteRelationOperationCompleted(object arg) {
            if ((this.DeleteRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRelationCompleted(this, new DeleteRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetAllRelation", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RelationInfo[] GetAllRelation() {
            object[] results = this.Invoke("GetAllRelation", new object[0]);
            return ((RelationInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRelationAsync() {
            this.GetAllRelationAsync(null);
        }
        
        /// <remarks/>
        public void GetAllRelationAsync(object userState) {
            if ((this.GetAllRelationOperationCompleted == null)) {
                this.GetAllRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRelationOperationCompleted);
            }
            this.InvokeAsync("GetAllRelation", new object[0], this.GetAllRelationOperationCompleted, userState);
        }
        
        private void OnGetAllRelationOperationCompleted(object arg) {
            if ((this.GetAllRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRelationCompleted(this, new GetAllRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetRelationByCategoryId", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RelationInfo[] GetRelationByCategoryId(int categoryId) {
            object[] results = this.Invoke("GetRelationByCategoryId", new object[] {
                        categoryId});
            return ((RelationInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationByCategoryIdAsync(int categoryId) {
            this.GetRelationByCategoryIdAsync(categoryId, null);
        }
        
        /// <remarks/>
        public void GetRelationByCategoryIdAsync(int categoryId, object userState) {
            if ((this.GetRelationByCategoryIdOperationCompleted == null)) {
                this.GetRelationByCategoryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationByCategoryIdOperationCompleted);
            }
            this.InvokeAsync("GetRelationByCategoryId", new object[] {
                        categoryId}, this.GetRelationByCategoryIdOperationCompleted, userState);
        }
        
        private void OnGetRelationByCategoryIdOperationCompleted(object arg) {
            if ((this.GetRelationByCategoryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationByCategoryIdCompleted(this, new GetRelationByCategoryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetRelationBySchemaId", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RelationInfo[] GetRelationBySchemaId(string schemaId) {
            object[] results = this.Invoke("GetRelationBySchemaId", new object[] {
                        schemaId});
            return ((RelationInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationBySchemaIdAsync(string schemaId) {
            this.GetRelationBySchemaIdAsync(schemaId, null);
        }
        
        /// <remarks/>
        public void GetRelationBySchemaIdAsync(string schemaId, object userState) {
            if ((this.GetRelationBySchemaIdOperationCompleted == null)) {
                this.GetRelationBySchemaIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationBySchemaIdOperationCompleted);
            }
            this.InvokeAsync("GetRelationBySchemaId", new object[] {
                        schemaId}, this.GetRelationBySchemaIdOperationCompleted, userState);
        }
        
        private void OnGetRelationBySchemaIdOperationCompleted(object arg) {
            if ((this.GetRelationBySchemaIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationBySchemaIdCompleted(this, new GetRelationBySchemaIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetRelationById", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RelationInfo GetRelationById(int id) {
            object[] results = this.Invoke("GetRelationById", new object[] {
                        id});
            return ((RelationInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationByIdAsync(int id) {
            this.GetRelationByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetRelationByIdAsync(int id, object userState) {
            if ((this.GetRelationByIdOperationCompleted == null)) {
                this.GetRelationByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationByIdOperationCompleted);
            }
            this.InvokeAsync("GetRelationById", new object[] {
                        id}, this.GetRelationByIdOperationCompleted, userState);
        }
        
        private void OnGetRelationByIdOperationCompleted(object arg) {
            if ((this.GetRelationByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationByIdCompleted(this, new GetRelationByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/InsertSchema", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertSchema(SchemaInfo obj) {
            object[] results = this.Invoke("InsertSchema", new object[] {
                        obj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSchemaAsync(SchemaInfo obj) {
            this.InsertSchemaAsync(obj, null);
        }
        
        /// <remarks/>
        public void InsertSchemaAsync(SchemaInfo obj, object userState) {
            if ((this.InsertSchemaOperationCompleted == null)) {
                this.InsertSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSchemaOperationCompleted);
            }
            this.InvokeAsync("InsertSchema", new object[] {
                        obj}, this.InsertSchemaOperationCompleted, userState);
        }
        
        private void OnInsertSchemaOperationCompleted(object arg) {
            if ((this.InsertSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSchemaCompleted(this, new InsertSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/UpdateSchema", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateSchema(SchemaInfo obj) {
            object[] results = this.Invoke("UpdateSchema", new object[] {
                        obj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSchemaAsync(SchemaInfo obj) {
            this.UpdateSchemaAsync(obj, null);
        }
        
        /// <remarks/>
        public void UpdateSchemaAsync(SchemaInfo obj, object userState) {
            if ((this.UpdateSchemaOperationCompleted == null)) {
                this.UpdateSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSchemaOperationCompleted);
            }
            this.InvokeAsync("UpdateSchema", new object[] {
                        obj}, this.UpdateSchemaOperationCompleted, userState);
        }
        
        private void OnUpdateSchemaOperationCompleted(object arg) {
            if ((this.UpdateSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSchemaCompleted(this, new UpdateSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/DeleteSchema", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteSchema(string id) {
            object[] results = this.Invoke("DeleteSchema", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSchemaAsync(string id) {
            this.DeleteSchemaAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteSchemaAsync(string id, object userState) {
            if ((this.DeleteSchemaOperationCompleted == null)) {
                this.DeleteSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSchemaOperationCompleted);
            }
            this.InvokeAsync("DeleteSchema", new object[] {
                        id}, this.DeleteSchemaOperationCompleted, userState);
        }
        
        private void OnDeleteSchemaOperationCompleted(object arg) {
            if ((this.DeleteSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSchemaCompleted(this, new DeleteSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetAllSchema", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SchemaInfo[] GetAllSchema() {
            object[] results = this.Invoke("GetAllSchema", new object[0]);
            return ((SchemaInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSchemaAsync() {
            this.GetAllSchemaAsync(null);
        }
        
        /// <remarks/>
        public void GetAllSchemaAsync(object userState) {
            if ((this.GetAllSchemaOperationCompleted == null)) {
                this.GetAllSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSchemaOperationCompleted);
            }
            this.InvokeAsync("GetAllSchema", new object[0], this.GetAllSchemaOperationCompleted, userState);
        }
        
        private void OnGetAllSchemaOperationCompleted(object arg) {
            if ((this.GetAllSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSchemaCompleted(this, new GetAllSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ypwater.com/WQService/GetSchemaById", RequestNamespace="http://www.ypwater.com/WQService/", ResponseNamespace="http://www.ypwater.com/WQService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SchemaInfo GetSchemaById(string id) {
            object[] results = this.Invoke("GetSchemaById", new object[] {
                        id});
            return ((SchemaInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetSchemaByIdAsync(string id) {
            this.GetSchemaByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetSchemaByIdAsync(string id, object userState) {
            if ((this.GetSchemaByIdOperationCompleted == null)) {
                this.GetSchemaByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchemaByIdOperationCompleted);
            }
            this.InvokeAsync("GetSchemaById", new object[] {
                        id}, this.GetSchemaByIdOperationCompleted, userState);
        }
        
        private void OnGetSchemaByIdOperationCompleted(object arg) {
            if ((this.GetSchemaByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchemaByIdCompleted(this, new GetSchemaByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ypwater.com/WQService/")]
    public partial class OperationInfo {
        
        private decimal idField;
        
        private System.DateTime operateTimeField;
        
        private string operatorCodeField;
        
        private string operatorNameField;
        
        private string operatorIpField;
        
        private string reportCodeField;
        
        private short operateTypeField;
        
        private int cycleIdField;
        
        private string modifyInfoField;
        
        private string oldXmlField;
        
        /// <remarks/>
        public decimal Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OperateTime {
            get {
                return this.operateTimeField;
            }
            set {
                this.operateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string OperatorCode {
            get {
                return this.operatorCodeField;
            }
            set {
                this.operatorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OperatorName {
            get {
                return this.operatorNameField;
            }
            set {
                this.operatorNameField = value;
            }
        }
        
        /// <remarks/>
        public string OperatorIp {
            get {
                return this.operatorIpField;
            }
            set {
                this.operatorIpField = value;
            }
        }
        
        /// <remarks/>
        public string ReportCode {
            get {
                return this.reportCodeField;
            }
            set {
                this.reportCodeField = value;
            }
        }
        
        /// <remarks/>
        public short OperateType {
            get {
                return this.operateTypeField;
            }
            set {
                this.operateTypeField = value;
            }
        }
        
        /// <remarks/>
        public int CycleId {
            get {
                return this.cycleIdField;
            }
            set {
                this.cycleIdField = value;
            }
        }
        
        /// <remarks/>
        public string ModifyInfo {
            get {
                return this.modifyInfoField;
            }
            set {
                this.modifyInfoField = value;
            }
        }
        
        /// <remarks/>
        public string OldXml {
            get {
                return this.oldXmlField;
            }
            set {
                this.oldXmlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ypwater.com/WQService/")]
    public partial class SchemaInfo {
        
        private string idField;
        
        private string nameField;
        
        private string typeField;
        
        private string xmlField;
        
        private string cycleTypeField;
        
        private string urlField;
        
        private string remarkField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Xml {
            get {
                return this.xmlField;
            }
            set {
                this.xmlField = value;
            }
        }
        
        /// <remarks/>
        public string CycleType {
            get {
                return this.cycleTypeField;
            }
            set {
                this.cycleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ypwater.com/WQService/")]
    public partial class RelationInfo {
        
        private int idField;
        
        private int categoryIdField;
        
        private string schemaIdField;
        
        private string schemaNameField;
        
        private string schemaTypeField;
        
        private string schemaCycleField;
        
        private string schemaUrlField;
        
        private int sortField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryId {
            get {
                return this.categoryIdField;
            }
            set {
                this.categoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string SchemaId {
            get {
                return this.schemaIdField;
            }
            set {
                this.schemaIdField = value;
            }
        }
        
        /// <remarks/>
        public string SchemaName {
            get {
                return this.schemaNameField;
            }
            set {
                this.schemaNameField = value;
            }
        }
        
        /// <remarks/>
        public string SchemaType {
            get {
                return this.schemaTypeField;
            }
            set {
                this.schemaTypeField = value;
            }
        }
        
        /// <remarks/>
        public string SchemaCycle {
            get {
                return this.schemaCycleField;
            }
            set {
                this.schemaCycleField = value;
            }
        }
        
        /// <remarks/>
        public string SchemaUrl {
            get {
                return this.schemaUrlField;
            }
            set {
                this.schemaUrlField = value;
            }
        }
        
        /// <remarks/>
        public int Sort {
            get {
                return this.sortField;
            }
            set {
                this.sortField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ypwater.com/WQService/")]
    public partial class CategoryInfo {
        
        private int idField;
        
        private string nameField;
        
        private int parentIdField;
        
        private int sortField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        public int Sort {
            get {
                return this.sortField;
            }
            set {
                this.sortField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetConnectionStringCompletedEventHandler(object sender, GetConnectionStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConnectionStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetReportSchemaXMLCompletedEventHandler(object sender, GetReportSchemaXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportSchemaXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportSchemaXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetZipedReportSchemaXMLCompletedEventHandler(object sender, GetZipedReportSchemaXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZipedReportSchemaXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZipedReportSchemaXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetReportSchemaDataCompletedEventHandler(object sender, GetReportSchemaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportSchemaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportSchemaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetZipedReportSchemaDataCompletedEventHandler(object sender, GetZipedReportSchemaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZipedReportSchemaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZipedReportSchemaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveReportSchemaData1CompletedEventHandler(object sender, SaveReportSchemaData1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReportSchemaData1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReportSchemaData1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveReportSchemaZipedData1CompletedEventHandler(object sender, SaveReportSchemaZipedData1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReportSchemaZipedData1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReportSchemaZipedData1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveReportSchemaZipedDataCompletedEventHandler(object sender, SaveReportSchemaZipedDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReportSchemaZipedDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReportSchemaZipedDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveReportSchemaDataCompletedEventHandler(object sender, SaveReportSchemaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReportSchemaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReportSchemaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SureReportSchemaDataCompletedEventHandler(object sender, SureReportSchemaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SureReportSchemaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SureReportSchemaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CancelReportSchemaDataCompletedEventHandler(object sender, CancelReportSchemaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelReportSchemaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelReportSchemaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddReportSchemaCompletedEventHandler(object sender, AddReportSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddReportSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddReportSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddZipedReportSchemaCompletedEventHandler(object sender, AddZipedReportSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddZipedReportSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddZipedReportSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateReportSchemaCompletedEventHandler(object sender, UpdateReportSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateReportSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateReportSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateZipedReportSchemaCompletedEventHandler(object sender, UpdateZipedReportSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateZipedReportSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateZipedReportSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddOperateInfoCompletedEventHandler(object sender, AddOperateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOperateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOperateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddOperationInfoCompletedEventHandler(object sender, AddOperationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOperationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOperationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLastOperateCompletedEventHandler(object sender, GetLastOperateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastOperateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastOperateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOperationInfoCompletedEventHandler(object sender, GetOperationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOperationByReportCodeAndCycleIdCompletedEventHandler(object sender, GetOperationByReportCodeAndCycleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationByReportCodeAndCycleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationByReportCodeAndCycleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOperationByIdCompletedEventHandler(object sender, GetOperationByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLatestOperationCompletedEventHandler(object sender, GetLatestOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InsertCategoryCompletedEventHandler(object sender, InsertCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateCategoryCompletedEventHandler(object sender, UpdateCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteCategoryCompletedEventHandler(object sender, DeleteCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllCategoryCompletedEventHandler(object sender, GetAllCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CategoryInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CategoryInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCategoryByIdCompletedEventHandler(object sender, GetCategoryByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CategoryInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CategoryInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InsertRelationCompletedEventHandler(object sender, InsertRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateRelationCompletedEventHandler(object sender, UpdateRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteRelationCompletedEventHandler(object sender, DeleteRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllRelationCompletedEventHandler(object sender, GetAllRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRelationByCategoryIdCompletedEventHandler(object sender, GetRelationByCategoryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationByCategoryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationByCategoryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRelationBySchemaIdCompletedEventHandler(object sender, GetRelationBySchemaIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationBySchemaIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationBySchemaIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRelationByIdCompletedEventHandler(object sender, GetRelationByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InsertSchemaCompletedEventHandler(object sender, InsertSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateSchemaCompletedEventHandler(object sender, UpdateSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteSchemaCompletedEventHandler(object sender, DeleteSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllSchemaCompletedEventHandler(object sender, GetAllSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SchemaInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SchemaInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSchemaByIdCompletedEventHandler(object sender, GetSchemaByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchemaByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchemaByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SchemaInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SchemaInfo)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591